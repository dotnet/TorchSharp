parameters:
  name: ''
  prepScript: ''
  buildScript: ''
  testScript: ''
  pool: {}
  container: ''

jobs:
  - job: ${{ parameters.name }}
    condition: ne(variables['build.sourcebranchname'], 'main')
    variables:
      _prepScript: ${{ parameters.prepScript }}
      _testScript: ${{ parameters.testScript }}
      _buildScript: ${{ parameters.buildScript }}
      _jobName: ${{ parameters.name }}
    pool:
      timeoutInMinutes: 30
      ${{ insert }}: ${{ parameters.pool }}
    ${{ if ne(parameters.container, '') }}:
      container: ${{ parameters.container }}
    strategy:
      maxParallel: 99
      matrix:
        Release_Build:
          _configuration: Release
          _config_short: R
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 6.x
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - script: $(_prepScript)
      displayName: Install build dependencies
    - script: $(_buildScript) $(_configuration)
      displayName: Build
    - script: $(_testScript) $(_configuration)
      displayName: Run Tests
    - task: PublishTestResults@2
      displayName: Publish Test Results
      condition: succeededOrFailed()
      inputs:
        testRunner: 'vSTest'
        searchFolder: '$(System.DefaultWorkingDirectory)/bin'
        testResultsFiles: '**/*.trx'
        testRunTitle: Machinelearning_Tests_$(_jobName)_$(_configuration)_$(Build.BuildNumber)
        configuration: $(_configuration)
        mergeTestResults: true
    - task: CopyFiles@2
      displayName: Stage build logs
      condition: not(succeeded())
      inputs:
        sourceFolder: $(Build.SourcesDirectory)
        contents: '?(msbuild.*|binclash.log|init-tools.log)'
        targetFolder: $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      displayName: Stage test output
      condition: not(succeeded())
      inputs:
        sourceFolder: $(Build.SourcesDirectory)/bin
        contents: |
          **/TestOutput/**/*
          **/*.trx
          **/Sequence_*.xml
        targetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      displayName: Publish build and test logs
      condition: not(succeeded())
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: ${{ parameters.name }} $(_config_short)
        artifactType: container
