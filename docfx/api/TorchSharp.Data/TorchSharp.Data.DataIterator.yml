### YamlMime:ManagedReference
items:
- uid: TorchSharp.Data.DataIterator
  id: DataIterator
  children:
  - TorchSharp.Data.DataIterator.Dispose
  - TorchSharp.Data.DataIterator.Dispose(System.Boolean)
  - TorchSharp.Data.DataIterator.Finalize
  - TorchSharp.Data.DataIterator.GetEnumerator
  - TorchSharp.Data.DataIterator.handle
  - TorchSharp.Data.DataIterator.Size
  - TorchSharp.Data.DataIterator.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: DataIterator
  nameWithType: TorchSharp.Data.DataIterator
  fullName: TorchSharp.Data.DataIterator
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  summary: Class implementing enumerable over PyTorch's iterator.
  syntax:
    content: 'public class DataIterator : IDisposable, System.Collections.Generic.IEnumerable<ValueTuple<TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor>>'
    content.csharp: 'public class DataIterator : IDisposable, System.Collections.Generic.IEnumerable<ValueTuple<TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.ValueTuple{TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor}}
  - System.IDisposable
  inheritedMembers: []
  modifiers.csharp:
  - public
- uid: TorchSharp.Data.DataIterator.Dispose
  id: Dispose
  parent: TorchSharp.Data.DataIterator
  langs:
  - csharp
  name: Dispose()
  nameWithType: DataIterator.Dispose()
  fullName: TorchSharp.Data.DataIterator.Dispose()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  summary: Releases the storage.
  syntax:
    content: public void Dispose ();
    parameters: []
    content.csharp: public void Dispose ();
  overload: TorchSharp.Data.DataIterator.Dispose*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.Data.DataIterator.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TorchSharp.Data.DataIterator
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataIterator.Dispose(Boolean)
  fullName: TorchSharp.Data.DataIterator.Dispose(Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  summary: Implements the .NET Dispose pattern.
  syntax:
    content: protected void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
    content.csharp: protected void Dispose (bool disposing);
  overload: TorchSharp.Data.DataIterator.Dispose*
  exceptions: []
  modifiers.csharp:
  - protected
- uid: TorchSharp.Data.DataIterator.Finalize
  id: Finalize
  parent: TorchSharp.Data.DataIterator
  langs:
  - csharp
  name: Finalize()
  nameWithType: DataIterator.Finalize()
  fullName: TorchSharp.Data.DataIterator.Finalize()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  syntax:
    content: ~DataIterator ();
    parameters: []
    content.csharp: ~DataIterator ();
  overload: TorchSharp.Data.DataIterator.Finalize*
  exceptions: []
- uid: TorchSharp.Data.DataIterator.GetEnumerator
  id: GetEnumerator
  parent: TorchSharp.Data.DataIterator
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataIterator.GetEnumerator()
  fullName: TorchSharp.Data.DataIterator.GetEnumerator()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  summary: Get the enumerator for this iterator.
  syntax:
    content: public System.Collections.Generic.IEnumerator<ValueTuple<TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.ValueTuple{TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor}}
      description: ''
    content.csharp: public System.Collections.Generic.IEnumerator<ValueTuple<TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor>> GetEnumerator ();
  overload: TorchSharp.Data.DataIterator.GetEnumerator*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.Data.DataIterator.handle
  id: handle
  parent: TorchSharp.Data.DataIterator
  langs:
  - csharp
  name: handle
  nameWithType: DataIterator.handle
  fullName: TorchSharp.Data.DataIterator.handle
  type: Field
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  syntax:
    content: protected TorchSharp.Data.DataIterator.HType handle;
    return:
      type: TorchSharp.Data.DataIterator.HType
      description: ''
    content.csharp: protected TorchSharp.Data.DataIterator.HType handle;
  exceptions: []
  modifiers.csharp:
  - protected
- uid: TorchSharp.Data.DataIterator.Size
  id: Size
  parent: TorchSharp.Data.DataIterator
  langs:
  - csharp
  name: Size()
  nameWithType: DataIterator.Size()
  fullName: TorchSharp.Data.DataIterator.Size()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  summary: Return the total size in Bytes of the input dataset.
  syntax:
    content: public long Size ();
    parameters: []
    return:
      type: System.Int64
      description: ''
    content.csharp: public long Size ();
  overload: TorchSharp.Data.DataIterator.Size*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.Data.DataIterator.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: TorchSharp.Data.DataIterator
  langs:
  - csharp
  name: IEnumerable.GetEnumerator()
  nameWithType: DataIterator.IEnumerable.GetEnumerator()
  fullName: TorchSharp.Data.DataIterator.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: ''
    content.csharp: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
  overload: TorchSharp.Data.DataIterator.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
references:
- uid: TorchSharp.Data
  commentId: N:TorchSharp.Data
  isExternal: false
  name: TorchSharp.Data
  nameWithType: TorchSharp.Data
  fullName: TorchSharp.Data
  type: namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TorchSharp.Data.DataIterator.Dispose
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: Dispose()
  nameWithType: DataIterator.Dispose()
  fullName: TorchSharp.Data.DataIterator.Dispose()
  type: method
- uid: TorchSharp.Data.DataIterator.Dispose(System.Boolean)
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataIterator.Dispose(Boolean)
  fullName: TorchSharp.Data.DataIterator.Dispose(Boolean)
  type: method
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TorchSharp.Data.DataIterator.Finalize
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: Finalize()
  nameWithType: DataIterator.Finalize()
  fullName: TorchSharp.Data.DataIterator.Finalize()
  type: method
- uid: TorchSharp.Data.DataIterator.GetEnumerator
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataIterator.GetEnumerator()
  fullName: TorchSharp.Data.DataIterator.GetEnumerator()
  type: method
- uid: System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.Generic.IEnumerator
- uid: System.ValueTuple`2
  isExternal: true
  name: ValueTuple
  nameWithType: ValueTuple
  fullName: System.ValueTuple
- uid: TorchSharp.Tensor.TorchTensor
  name: TorchTensor
  nameWithType: TorchTensor
  fullName: TorchSharp.Tensor.TorchTensor
- uid: System.Collections.Generic.IEnumerator{System.ValueTuple{TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor}}
  parent: System.Collections.Generic
  name: IEnumerator<ValueTuple<TorchTensor,TorchTensor>>
  nameWithType: IEnumerator<ValueTuple<TorchTensor,TorchTensor>>
  fullName: System.Collections.Generic.IEnumerator<System.ValueTuple<TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.Data.DataIterator.handle
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: handle
  nameWithType: DataIterator.handle
  fullName: TorchSharp.Data.DataIterator.handle
  type: field
- uid: TorchSharp.Data.DataIterator.HType
  parent: TorchSharp.Data
  isExternal: false
  name: DataIterator.HType
  nameWithType: DataIterator.HType
  fullName: TorchSharp.Data.DataIterator.HType
- uid: TorchSharp.Data.DataIterator.Size
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: Size()
  nameWithType: DataIterator.Size()
  fullName: TorchSharp.Data.DataIterator.Size()
  type: method
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: TorchSharp.Data.DataIterator.System#Collections#IEnumerable#GetEnumerator
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: DataIterator.IEnumerable.GetEnumerator()
  fullName: TorchSharp.Data.DataIterator.System.Collections.IEnumerable.GetEnumerator()
  type: method
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: TorchSharp.Data.DataIterator.Dispose*
  commentId: Overload:TorchSharp.Data.DataIterator.Dispose
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: Dispose
  nameWithType: DataIterator.Dispose
  fullName: TorchSharp.Data.DataIterator.Dispose
  type: method
- uid: TorchSharp.Data.DataIterator.Finalize*
  commentId: Overload:TorchSharp.Data.DataIterator.Finalize
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: Finalize
  nameWithType: DataIterator.Finalize
  fullName: TorchSharp.Data.DataIterator.Finalize
  type: method
- uid: TorchSharp.Data.DataIterator.GetEnumerator*
  commentId: Overload:TorchSharp.Data.DataIterator.GetEnumerator
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: GetEnumerator
  nameWithType: DataIterator.GetEnumerator
  fullName: TorchSharp.Data.DataIterator.GetEnumerator
  type: method
- uid: TorchSharp.Data.DataIterator.Size*
  commentId: Overload:TorchSharp.Data.DataIterator.Size
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: Size
  nameWithType: DataIterator.Size
  fullName: TorchSharp.Data.DataIterator.Size
  type: method
- uid: TorchSharp.Data.DataIterator.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:TorchSharp.Data.DataIterator.System#Collections#IEnumerable#GetEnumerator
  parent: TorchSharp.Data.DataIterator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: DataIterator.IEnumerable.GetEnumerator
  fullName: TorchSharp.Data.DataIterator.System.Collections.IEnumerable.GetEnumerator
  type: method
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.Generic.IEnumerable
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor}}
  parent: System.Collections.Generic
  name: IEnumerable<ValueTuple<TorchTensor,TorchTensor>>
  nameWithType: IEnumerable<ValueTuple<TorchTensor,TorchTensor>>
  fullName: System.Collections.Generic.IEnumerable<System.ValueTuple<TorchSharp.Tensor.TorchTensor,TorchSharp.Tensor.TorchTensor>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
