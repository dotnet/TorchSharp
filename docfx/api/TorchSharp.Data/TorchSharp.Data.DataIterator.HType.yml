### YamlMime:ManagedReference
items:
- uid: TorchSharp.Data.DataIterator.HType
  id: DataIterator.HType
  children:
  - TorchSharp.Data.DataIterator.HType.#ctor(System.IntPtr,System.Boolean)
  - TorchSharp.Data.DataIterator.HType.Dispose(System.Boolean)
  - TorchSharp.Data.DataIterator.HType.IsInvalid
  - TorchSharp.Data.DataIterator.HType.ReleaseHandle
  langs:
  - csharp
  name: DataIterator.HType
  nameWithType: TorchSharp.Data.DataIterator.HType
  fullName: TorchSharp.Data.DataIterator.HType
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  summary: Class wrapping PyTorch's iterator object reference.
  syntax:
    content: 'protected sealed class DataIterator.HType : System.Runtime.InteropServices.SafeHandle'
    content.csharp: 'protected sealed class DataIterator.HType : System.Runtime.InteropServices.SafeHandle'
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  implements: []
  inheritedMembers: []
  modifiers.csharp:
  - protected
  - sealed
- uid: TorchSharp.Data.DataIterator.HType.#ctor(System.IntPtr,System.Boolean)
  id: '#ctor(System.IntPtr,System.Boolean)'
  parent: TorchSharp.Data.DataIterator.HType
  langs:
  - csharp
  name: DataIterator.HType(IntPtr, Boolean)
  nameWithType: DataIterator.HType.DataIterator.HType(IntPtr, Boolean)
  fullName: TorchSharp.Data.DataIterator.HType.DataIterator.HType(IntPtr, Boolean)
  type: Constructor
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  syntax:
    content: public HType (IntPtr preexistingHandle, bool ownsHandle);
    parameters:
    - id: preexistingHandle
      type: System.IntPtr
      description: ''
    - id: ownsHandle
      type: System.Boolean
      description: ''
    content.csharp: public HType (IntPtr preexistingHandle, bool ownsHandle);
  overload: TorchSharp.Data.DataIterator.HType.#ctor*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.Data.DataIterator.HType.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TorchSharp.Data.DataIterator.HType
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataIterator.HType.Dispose(Boolean)
  fullName: TorchSharp.Data.DataIterator.HType.Dispose(Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
    content.csharp: protected override void Dispose (bool disposing);
  overload: TorchSharp.Data.DataIterator.HType.Dispose*
  exceptions: []
  modifiers.csharp:
  - protected
- uid: TorchSharp.Data.DataIterator.HType.IsInvalid
  id: IsInvalid
  parent: TorchSharp.Data.DataIterator.HType
  langs:
  - csharp
  name: IsInvalid
  nameWithType: DataIterator.HType.IsInvalid
  fullName: TorchSharp.Data.DataIterator.HType.IsInvalid
  type: Property
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: ''
    content.csharp: public override bool IsInvalid { get; }
  overload: TorchSharp.Data.DataIterator.HType.IsInvalid*
  exceptions: []
  modifiers.csharp:
  - public
  - get
- uid: TorchSharp.Data.DataIterator.HType.ReleaseHandle
  id: ReleaseHandle
  parent: TorchSharp.Data.DataIterator.HType
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: DataIterator.HType.ReleaseHandle()
  fullName: TorchSharp.Data.DataIterator.HType.ReleaseHandle()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Data
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.csharp: protected override bool ReleaseHandle ();
  overload: TorchSharp.Data.DataIterator.HType.ReleaseHandle*
  exceptions: []
  modifiers.csharp:
  - protected
references:
- uid: TorchSharp.Data
  commentId: N:TorchSharp.Data
  isExternal: false
  name: TorchSharp.Data
  nameWithType: TorchSharp.Data
  fullName: TorchSharp.Data
  type: namespace
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: TorchSharp.Data.DataIterator.HType.#ctor(System.IntPtr,System.Boolean)
  parent: TorchSharp.Data.DataIterator.HType
  isExternal: false
  name: DataIterator.HType(IntPtr, Boolean)
  nameWithType: DataIterator.HType.DataIterator.HType(IntPtr, Boolean)
  fullName: TorchSharp.Data.DataIterator.HType.DataIterator.HType(IntPtr, Boolean)
  type: constructor
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TorchSharp.Data.DataIterator.HType.Dispose(System.Boolean)
  parent: TorchSharp.Data.DataIterator.HType
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataIterator.HType.Dispose(Boolean)
  fullName: TorchSharp.Data.DataIterator.HType.Dispose(Boolean)
  type: method
- uid: TorchSharp.Data.DataIterator.HType.IsInvalid
  parent: TorchSharp.Data.DataIterator.HType
  isExternal: false
  name: IsInvalid
  nameWithType: DataIterator.HType.IsInvalid
  fullName: TorchSharp.Data.DataIterator.HType.IsInvalid
  type: property
- uid: TorchSharp.Data.DataIterator.HType.ReleaseHandle
  parent: TorchSharp.Data.DataIterator.HType
  isExternal: false
  name: ReleaseHandle()
  nameWithType: DataIterator.HType.ReleaseHandle()
  fullName: TorchSharp.Data.DataIterator.HType.ReleaseHandle()
  type: method
- uid: TorchSharp.Data.DataIterator.HType.#ctor*
  commentId: Overload:TorchSharp.Data.DataIterator.HType.#ctor
  parent: TorchSharp.Data.DataIterator.HType
  isExternal: false
  name: DataIterator.HType
  nameWithType: DataIterator.HType.DataIterator.HType
  fullName: TorchSharp.Data.DataIterator.HType.DataIterator.HType
  type: constructor
- uid: TorchSharp.Data.DataIterator.HType.Dispose*
  commentId: Overload:TorchSharp.Data.DataIterator.HType.Dispose
  parent: TorchSharp.Data.DataIterator.HType
  isExternal: false
  name: Dispose
  nameWithType: DataIterator.HType.Dispose
  fullName: TorchSharp.Data.DataIterator.HType.Dispose
  type: method
- uid: TorchSharp.Data.DataIterator.HType.IsInvalid*
  commentId: Overload:TorchSharp.Data.DataIterator.HType.IsInvalid
  parent: TorchSharp.Data.DataIterator.HType
  isExternal: false
  name: IsInvalid
  nameWithType: DataIterator.HType.IsInvalid
  fullName: TorchSharp.Data.DataIterator.HType.IsInvalid
  type: property
- uid: TorchSharp.Data.DataIterator.HType.ReleaseHandle*
  commentId: Overload:TorchSharp.Data.DataIterator.HType.ReleaseHandle
  parent: TorchSharp.Data.DataIterator.HType
  isExternal: false
  name: ReleaseHandle
  nameWithType: DataIterator.HType.ReleaseHandle
  fullName: TorchSharp.Data.DataIterator.HType.ReleaseHandle
  type: method
