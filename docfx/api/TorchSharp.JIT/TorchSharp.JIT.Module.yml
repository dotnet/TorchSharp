### YamlMime:ManagedReference
items:
- uid: TorchSharp.JIT.Module
  id: Module
  children:
  - TorchSharp.JIT.Module.Dispose
  - TorchSharp.JIT.Module.Dispose(System.Boolean)
  - TorchSharp.JIT.Module.Finalize
  - TorchSharp.JIT.Module.Forward(TorchSharp.Tensor.TorchTensor[])
  - TorchSharp.JIT.Module.GetInputType(System.Int32)
  - TorchSharp.JIT.Module.GetNumberOfInputs
  - TorchSharp.JIT.Module.GetNumberOfOutputs
  - TorchSharp.JIT.Module.GetOutputType(System.Int32)
  - TorchSharp.JIT.Module.GetSubModulesNames
  - TorchSharp.JIT.Module.Load(System.String)
  langs:
  - csharp
  name: Module
  nameWithType: TorchSharp.JIT.Module
  fullName: TorchSharp.JIT.Module
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  syntax:
    content: 'public class Module : IDisposable'
    content.csharp: 'public class Module : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  modifiers.csharp:
  - public
- uid: TorchSharp.JIT.Module.Dispose
  id: Dispose
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: Dispose()
  nameWithType: Module.Dispose()
  fullName: TorchSharp.JIT.Module.Dispose()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  summary: Releases the storage.
  syntax:
    content: public void Dispose ();
    parameters: []
    content.csharp: public void Dispose ();
  overload: TorchSharp.JIT.Module.Dispose*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.JIT.Module.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Module.Dispose(Boolean)
  fullName: TorchSharp.JIT.Module.Dispose(Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  summary: Implements the .NET Dispose pattern.
  syntax:
    content: protected void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
    content.csharp: protected void Dispose (bool disposing);
  overload: TorchSharp.JIT.Module.Dispose*
  exceptions: []
  modifiers.csharp:
  - protected
- uid: TorchSharp.JIT.Module.Finalize
  id: Finalize
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: Finalize()
  nameWithType: Module.Finalize()
  fullName: TorchSharp.JIT.Module.Finalize()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  syntax:
    content: ~Module ();
    parameters: []
    content.csharp: ~Module ();
  overload: TorchSharp.JIT.Module.Finalize*
  exceptions: []
- uid: TorchSharp.JIT.Module.Forward(TorchSharp.Tensor.TorchTensor[])
  id: Forward(TorchSharp.Tensor.TorchTensor[])
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: Forward(TorchTensor[])
  nameWithType: Module.Forward(TorchTensor[])
  fullName: TorchSharp.JIT.Module.Forward(TorchTensor[])
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  syntax:
    content: public TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor[] tensors);
    parameters:
    - id: tensors
      type: TorchSharp.Tensor.TorchTensor[]
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor[] tensors);
  overload: TorchSharp.JIT.Module.Forward*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.JIT.Module.GetInputType(System.Int32)
  id: GetInputType(System.Int32)
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: GetInputType(Int32)
  nameWithType: Module.GetInputType(Int32)
  fullName: TorchSharp.JIT.Module.GetInputType(Int32)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  syntax:
    content: public TorchSharp.JIT.Type GetInputType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: TorchSharp.JIT.Type
      description: ''
    content.csharp: public TorchSharp.JIT.Type GetInputType (int index);
  overload: TorchSharp.JIT.Module.GetInputType*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.JIT.Module.GetNumberOfInputs
  id: GetNumberOfInputs
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: GetNumberOfInputs()
  nameWithType: Module.GetNumberOfInputs()
  fullName: TorchSharp.JIT.Module.GetNumberOfInputs()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  syntax:
    content: public int GetNumberOfInputs ();
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.csharp: public int GetNumberOfInputs ();
  overload: TorchSharp.JIT.Module.GetNumberOfInputs*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.JIT.Module.GetNumberOfOutputs
  id: GetNumberOfOutputs
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: GetNumberOfOutputs()
  nameWithType: Module.GetNumberOfOutputs()
  fullName: TorchSharp.JIT.Module.GetNumberOfOutputs()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  syntax:
    content: public int GetNumberOfOutputs ();
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.csharp: public int GetNumberOfOutputs ();
  overload: TorchSharp.JIT.Module.GetNumberOfOutputs*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.JIT.Module.GetOutputType(System.Int32)
  id: GetOutputType(System.Int32)
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: GetOutputType(Int32)
  nameWithType: Module.GetOutputType(Int32)
  fullName: TorchSharp.JIT.Module.GetOutputType(Int32)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  syntax:
    content: public TorchSharp.JIT.Type GetOutputType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: TorchSharp.JIT.Type
      description: ''
    content.csharp: public TorchSharp.JIT.Type GetOutputType (int index);
  overload: TorchSharp.JIT.Module.GetOutputType*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.JIT.Module.GetSubModulesNames
  id: GetSubModulesNames
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: GetSubModulesNames()
  nameWithType: Module.GetSubModulesNames()
  fullName: TorchSharp.JIT.Module.GetSubModulesNames()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  syntax:
    content: public string[] GetSubModulesNames ();
    parameters: []
    return:
      type: System.String[]
      description: ''
    content.csharp: public string[] GetSubModulesNames ();
  overload: TorchSharp.JIT.Module.GetSubModulesNames*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.JIT.Module.Load(System.String)
  id: Load(System.String)
  parent: TorchSharp.JIT.Module
  langs:
  - csharp
  name: Load(String)
  nameWithType: Module.Load(String)
  fullName: TorchSharp.JIT.Module.Load(String)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.JIT
  syntax:
    content: public static TorchSharp.JIT.Module Load (string filename);
    parameters:
    - id: filename
      type: System.String
      description: ''
    return:
      type: TorchSharp.JIT.Module
      description: ''
    content.csharp: public static TorchSharp.JIT.Module Load (string filename);
  overload: TorchSharp.JIT.Module.Load*
  exceptions: []
  modifiers.csharp:
  - public
  - static
references:
- uid: TorchSharp.JIT
  commentId: N:TorchSharp.JIT
  isExternal: false
  name: TorchSharp.JIT
  nameWithType: TorchSharp.JIT
  fullName: TorchSharp.JIT
  type: namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TorchSharp.JIT.Module.Dispose
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: Dispose()
  nameWithType: Module.Dispose()
  fullName: TorchSharp.JIT.Module.Dispose()
  type: method
- uid: TorchSharp.JIT.Module.Dispose(System.Boolean)
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Module.Dispose(Boolean)
  fullName: TorchSharp.JIT.Module.Dispose(Boolean)
  type: method
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TorchSharp.JIT.Module.Finalize
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: Finalize()
  nameWithType: Module.Finalize()
  fullName: TorchSharp.JIT.Module.Finalize()
  type: method
- uid: TorchSharp.JIT.Module.Forward(TorchSharp.Tensor.TorchTensor[])
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: Forward(TorchTensor[])
  nameWithType: Module.Forward(TorchTensor[])
  fullName: TorchSharp.JIT.Module.Forward(TorchTensor[])
  type: method
- uid: TorchSharp.Tensor.TorchTensor
  parent: TorchSharp.Tensor
  isExternal: false
  name: TorchTensor
  nameWithType: TorchTensor
  fullName: TorchSharp.Tensor.TorchTensor
- uid: TorchSharp.Tensor.TorchTensor[]
  parent: TorchSharp.Tensor
  name: TorchTensor[]
  nameWithType: TorchTensor[]
  fullName: TorchSharp.Tensor.TorchTensor[]
  spec.csharp:
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: TorchSharp.JIT.Module.GetInputType(System.Int32)
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetInputType(Int32)
  nameWithType: Module.GetInputType(Int32)
  fullName: TorchSharp.JIT.Module.GetInputType(Int32)
  type: method
- uid: TorchSharp.JIT.Type
  parent: TorchSharp.JIT
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: TorchSharp.JIT.Type
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TorchSharp.JIT.Module.GetNumberOfInputs
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetNumberOfInputs()
  nameWithType: Module.GetNumberOfInputs()
  fullName: TorchSharp.JIT.Module.GetNumberOfInputs()
  type: method
- uid: TorchSharp.JIT.Module.GetNumberOfOutputs
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetNumberOfOutputs()
  nameWithType: Module.GetNumberOfOutputs()
  fullName: TorchSharp.JIT.Module.GetNumberOfOutputs()
  type: method
- uid: TorchSharp.JIT.Module.GetOutputType(System.Int32)
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetOutputType(Int32)
  nameWithType: Module.GetOutputType(Int32)
  fullName: TorchSharp.JIT.Module.GetOutputType(Int32)
  type: method
- uid: TorchSharp.JIT.Module.GetSubModulesNames
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetSubModulesNames()
  nameWithType: Module.GetSubModulesNames()
  fullName: TorchSharp.JIT.Module.GetSubModulesNames()
  type: method
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: TorchSharp.JIT.Module.Load(System.String)
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: Load(String)
  nameWithType: Module.Load(String)
  fullName: TorchSharp.JIT.Module.Load(String)
  type: method
- uid: TorchSharp.JIT.Module
  parent: TorchSharp.JIT
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: TorchSharp.JIT.Module
- uid: TorchSharp.JIT.Module.Dispose*
  commentId: Overload:TorchSharp.JIT.Module.Dispose
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: Dispose
  nameWithType: Module.Dispose
  fullName: TorchSharp.JIT.Module.Dispose
  type: method
- uid: TorchSharp.JIT.Module.Finalize*
  commentId: Overload:TorchSharp.JIT.Module.Finalize
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: Finalize
  nameWithType: Module.Finalize
  fullName: TorchSharp.JIT.Module.Finalize
  type: method
- uid: TorchSharp.JIT.Module.Forward*
  commentId: Overload:TorchSharp.JIT.Module.Forward
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: Forward
  nameWithType: Module.Forward
  fullName: TorchSharp.JIT.Module.Forward
  type: method
- uid: TorchSharp.JIT.Module.GetInputType*
  commentId: Overload:TorchSharp.JIT.Module.GetInputType
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetInputType
  nameWithType: Module.GetInputType
  fullName: TorchSharp.JIT.Module.GetInputType
  type: method
- uid: TorchSharp.JIT.Module.GetNumberOfInputs*
  commentId: Overload:TorchSharp.JIT.Module.GetNumberOfInputs
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetNumberOfInputs
  nameWithType: Module.GetNumberOfInputs
  fullName: TorchSharp.JIT.Module.GetNumberOfInputs
  type: method
- uid: TorchSharp.JIT.Module.GetNumberOfOutputs*
  commentId: Overload:TorchSharp.JIT.Module.GetNumberOfOutputs
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetNumberOfOutputs
  nameWithType: Module.GetNumberOfOutputs
  fullName: TorchSharp.JIT.Module.GetNumberOfOutputs
  type: method
- uid: TorchSharp.JIT.Module.GetOutputType*
  commentId: Overload:TorchSharp.JIT.Module.GetOutputType
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetOutputType
  nameWithType: Module.GetOutputType
  fullName: TorchSharp.JIT.Module.GetOutputType
  type: method
- uid: TorchSharp.JIT.Module.GetSubModulesNames*
  commentId: Overload:TorchSharp.JIT.Module.GetSubModulesNames
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: GetSubModulesNames
  nameWithType: Module.GetSubModulesNames
  fullName: TorchSharp.JIT.Module.GetSubModulesNames
  type: method
- uid: TorchSharp.JIT.Module.Load*
  commentId: Overload:TorchSharp.JIT.Module.Load
  parent: TorchSharp.JIT.Module
  isExternal: false
  name: Load
  nameWithType: Module.Load
  fullName: TorchSharp.JIT.Module.Load
  type: method
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
