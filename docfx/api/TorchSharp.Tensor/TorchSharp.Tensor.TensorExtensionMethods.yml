### YamlMime:ManagedReference
items:
- uid: TorchSharp.Tensor.TensorExtensionMethods
  id: TensorExtensionMethods
  children:
  - TorchSharp.Tensor.TensorExtensionMethods.Cat(TorchSharp.Tensor.TorchTensor[],System.Int64)
  - TorchSharp.Tensor.TensorExtensionMethods.Stack(TorchSharp.Tensor.TorchTensor[],System.Int64)
  - TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor``1(``0,System.Boolean)
  - TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor``1(``0[],System.Int64[],System.Boolean,System.Boolean)
  langs:
  - csharp
  name: TensorExtensionMethods
  nameWithType: TorchSharp.Tensor.TensorExtensionMethods
  fullName: TorchSharp.Tensor.TensorExtensionMethods
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Tensor
  syntax:
    content: public static class TensorExtensionMethods
    content.csharp: public static class TensorExtensionMethods
  inheritance:
  - System.Object
  implements: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.Tensor.TensorExtensionMethods.Cat(TorchSharp.Tensor.TorchTensor[],System.Int64)
  id: Cat(TorchSharp.Tensor.TorchTensor[],System.Int64)
  parent: TorchSharp.Tensor.TensorExtensionMethods
  langs:
  - csharp
  name: Cat(TorchTensor[], Int64)
  nameWithType: TensorExtensionMethods.Cat(TorchTensor[], Int64)
  fullName: TorchSharp.Tensor.TensorExtensionMethods.Cat(TorchTensor[], Int64)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Tensor
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor Cat (this TorchSharp.Tensor.TorchTensor[] tensors, long dimension);
    parameters:
    - id: tensors
      type: TorchSharp.Tensor.TorchTensor[]
      description: ''
    - id: dimension
      type: System.Int64
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor Cat (this TorchSharp.Tensor.TorchTensor[] tensors, long dimension);
  overload: TorchSharp.Tensor.TensorExtensionMethods.Cat*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.Tensor.TensorExtensionMethods.Stack(TorchSharp.Tensor.TorchTensor[],System.Int64)
  id: Stack(TorchSharp.Tensor.TorchTensor[],System.Int64)
  parent: TorchSharp.Tensor.TensorExtensionMethods
  langs:
  - csharp
  name: Stack(TorchTensor[], Int64)
  nameWithType: TensorExtensionMethods.Stack(TorchTensor[], Int64)
  fullName: TorchSharp.Tensor.TensorExtensionMethods.Stack(TorchTensor[], Int64)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Tensor
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor Stack (this TorchSharp.Tensor.TorchTensor[] tensors, long dimension);
    parameters:
    - id: tensors
      type: TorchSharp.Tensor.TorchTensor[]
      description: ''
    - id: dimension
      type: System.Int64
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor Stack (this TorchSharp.Tensor.TorchTensor[] tensors, long dimension);
  overload: TorchSharp.Tensor.TensorExtensionMethods.Stack*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor``1(``0,System.Boolean)
  id: ToTorchTensor``1(``0,System.Boolean)
  parent: TorchSharp.Tensor.TensorExtensionMethods
  langs:
  - csharp
  name: ToTorchTensor<T>(T, Boolean)
  nameWithType: TensorExtensionMethods.ToTorchTensor<T>(T, Boolean)
  fullName: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor<T>(T, Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Tensor
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor ToTorchTensor<T> (this T scalar, bool requiresGrad = false);
    parameters:
    - id: scalar
      type: T
      description: ''
    - id: requiresGrad
      type: System.Boolean
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor ToTorchTensor<T> (this T scalar, bool requiresGrad = false);
  overload: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor``1(``0[],System.Int64[],System.Boolean,System.Boolean)
  id: ToTorchTensor``1(``0[],System.Int64[],System.Boolean,System.Boolean)
  parent: TorchSharp.Tensor.TensorExtensionMethods
  langs:
  - csharp
  name: ToTorchTensor<T>(T[], Int64[], Boolean, Boolean)
  nameWithType: TensorExtensionMethods.ToTorchTensor<T>(T[], Int64[], Boolean, Boolean)
  fullName: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor<T>(T[], Int64[], Boolean, Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.Tensor
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor ToTorchTensor<T> (this T[] rawArray, long[] dimensions, bool doCopy = false, bool requiresGrad = false);
    parameters:
    - id: rawArray
      type: T[]
      description: ''
    - id: dimensions
      type: System.Int64[]
      description: ''
    - id: doCopy
      type: System.Boolean
      description: ''
    - id: requiresGrad
      type: System.Boolean
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor ToTorchTensor<T> (this T[] rawArray, long[] dimensions, bool doCopy = false, bool requiresGrad = false);
  overload: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor*
  exceptions: []
  modifiers.csharp:
  - public
  - static
references:
- uid: TorchSharp.Tensor
  commentId: N:TorchSharp.Tensor
  isExternal: false
  name: TorchSharp.Tensor
  nameWithType: TorchSharp.Tensor
  fullName: TorchSharp.Tensor
  type: namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TorchSharp.Tensor.TensorExtensionMethods.Cat(TorchSharp.Tensor.TorchTensor[],System.Int64)
  parent: TorchSharp.Tensor.TensorExtensionMethods
  isExternal: false
  name: Cat(TorchTensor[], Int64)
  nameWithType: TensorExtensionMethods.Cat(TorchTensor[], Int64)
  fullName: TorchSharp.Tensor.TensorExtensionMethods.Cat(TorchTensor[], Int64)
  type: method
- uid: TorchSharp.Tensor.TorchTensor
  parent: TorchSharp.Tensor
  isExternal: false
  name: TorchTensor
  nameWithType: TorchTensor
  fullName: TorchSharp.Tensor.TorchTensor
- uid: TorchSharp.Tensor.TorchTensor[]
  parent: TorchSharp.Tensor
  name: TorchTensor[]
  nameWithType: TorchTensor[]
  fullName: TorchSharp.Tensor.TorchTensor[]
  spec.csharp:
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: TorchSharp.Tensor.TensorExtensionMethods.Stack(TorchSharp.Tensor.TorchTensor[],System.Int64)
  parent: TorchSharp.Tensor.TensorExtensionMethods
  isExternal: false
  name: Stack(TorchTensor[], Int64)
  nameWithType: TensorExtensionMethods.Stack(TorchTensor[], Int64)
  fullName: TorchSharp.Tensor.TensorExtensionMethods.Stack(TorchTensor[], Int64)
  type: method
- uid: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor``1(``0,System.Boolean)
  parent: TorchSharp.Tensor.TensorExtensionMethods
  isExternal: false
  name: ToTorchTensor<T>(T, Boolean)
  nameWithType: TensorExtensionMethods.ToTorchTensor<T>(T, Boolean)
  fullName: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor<T>(T, Boolean)
  type: method
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor``1(``0[],System.Int64[],System.Boolean,System.Boolean)
  parent: TorchSharp.Tensor.TensorExtensionMethods
  isExternal: false
  name: ToTorchTensor<T>(T[], Int64[], Boolean, Boolean)
  nameWithType: TensorExtensionMethods.ToTorchTensor<T>(T[], Int64[], Boolean, Boolean)
  fullName: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor<T>(T[], Int64[], Boolean, Boolean)
  type: method
- uid: T[]
  name: T[]
  nameWithType: T[]
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int64[]
  parent: System
  name: Int64[]
  nameWithType: Int64[]
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: TorchSharp.Tensor.TensorExtensionMethods.Cat*
  commentId: Overload:TorchSharp.Tensor.TensorExtensionMethods.Cat
  parent: TorchSharp.Tensor.TensorExtensionMethods
  isExternal: false
  name: Cat
  nameWithType: TensorExtensionMethods.Cat
  fullName: TorchSharp.Tensor.TensorExtensionMethods.Cat
  type: method
- uid: TorchSharp.Tensor.TensorExtensionMethods.Stack*
  commentId: Overload:TorchSharp.Tensor.TensorExtensionMethods.Stack
  parent: TorchSharp.Tensor.TensorExtensionMethods
  isExternal: false
  name: Stack
  nameWithType: TensorExtensionMethods.Stack
  fullName: TorchSharp.Tensor.TensorExtensionMethods.Stack
  type: method
- uid: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor*
  commentId: Overload:TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor
  parent: TorchSharp.Tensor.TensorExtensionMethods
  isExternal: false
  name: ToTorchTensor
  nameWithType: TensorExtensionMethods.ToTorchTensor
  fullName: TorchSharp.Tensor.TensorExtensionMethods.ToTorchTensor
  type: method
