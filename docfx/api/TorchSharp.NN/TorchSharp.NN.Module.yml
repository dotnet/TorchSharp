### YamlMime:ManagedReference
items:
- uid: TorchSharp.NN.Module
  id: Module
  children:
  - TorchSharp.NN.Module.#ctor(TorchSharp.NN.Parameter[])
  - TorchSharp.NN.Module.AdaptiveAvgPool2D(System.Int64[])
  - TorchSharp.NN.Module.AdaptiveAvgPool2D(TorchSharp.Tensor.TorchTensor,System.Int64[])
  - TorchSharp.NN.Module.Conv2D(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  - TorchSharp.NN.Module.Dispose
  - TorchSharp.NN.Module.Dispose(System.Boolean)
  - TorchSharp.NN.Module.Dropout(System.Boolean,System.Double)
  - TorchSharp.NN.Module.Dropout(TorchSharp.Tensor.TorchTensor,System.Boolean,System.Double)
  - TorchSharp.NN.Module.Eval
  - TorchSharp.NN.Module.FeatureDropout(TorchSharp.Tensor.TorchTensor)
  - TorchSharp.NN.Module.Finalize
  - TorchSharp.NN.Module.Forward(TorchSharp.Tensor.TorchTensor)
  - TorchSharp.NN.Module.GetModules
  - TorchSharp.NN.Module.GetName
  - TorchSharp.NN.Module.GetParameter(System.String)
  - TorchSharp.NN.Module.HasParameter(System.String)
  - TorchSharp.NN.Module.IsTraining
  - TorchSharp.NN.Module.Linear(System.Int64,System.Int64,System.Boolean)
  - TorchSharp.NN.Module.LogSoftMax(System.Int64)
  - TorchSharp.NN.Module.LogSoftMax(TorchSharp.Tensor.TorchTensor,System.Int64)
  - TorchSharp.NN.Module.MaxPool2D(System.Int64[],System.Int64[])
  - TorchSharp.NN.Module.MaxPool2D(TorchSharp.Tensor.TorchTensor,System.Int64[],System.Int64[])
  - TorchSharp.NN.Module.Modules
  - TorchSharp.NN.Module.NamedParameters
  - TorchSharp.NN.Module.Parameters
  - TorchSharp.NN.Module.RegisterModule(TorchSharp.NN.Module)
  - TorchSharp.NN.Module.Relu(System.Boolean)
  - TorchSharp.NN.Module.Relu(TorchSharp.Tensor.TorchTensor,System.Boolean)
  - TorchSharp.NN.Module.Sequential(TorchSharp.NN.Module[])
  - TorchSharp.NN.Module.Train
  - TorchSharp.NN.Module.ZeroGrad
  langs:
  - csharp
  name: Module
  nameWithType: TorchSharp.NN.Module
  fullName: TorchSharp.NN.Module
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: 'public abstract class Module : IDisposable'
    content.csharp: 'public abstract class Module : IDisposable'
  inheritance:
  - System.Object
  derivedClasses:
  - TorchSharp.NN.ProvidedModule
  implements:
  - System.IDisposable
  inheritedMembers: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.#ctor(TorchSharp.NN.Parameter[])
  id: '#ctor(TorchSharp.NN.Parameter[])'
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Module(Parameter[])
  nameWithType: Module.Module(Parameter[])
  fullName: TorchSharp.NN.Module.Module(Parameter[])
  type: Constructor
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: protected Module (TorchSharp.NN.Parameter[] parameters);
    parameters:
    - id: parameters
      type: TorchSharp.NN.Parameter[]
      description: ''
    content.csharp: protected Module (TorchSharp.NN.Parameter[] parameters);
  overload: TorchSharp.NN.Module.#ctor*
  exceptions: []
  modifiers.csharp:
  - protected
- uid: TorchSharp.NN.Module.AdaptiveAvgPool2D(System.Int64[])
  id: AdaptiveAvgPool2D(System.Int64[])
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: AdaptiveAvgPool2D(Int64[])
  nameWithType: Module.AdaptiveAvgPool2D(Int64[])
  fullName: TorchSharp.NN.Module.AdaptiveAvgPool2D(Int64[])
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.AdaptiveAvgPool2D AdaptiveAvgPool2D (long[] outputSize);
    parameters:
    - id: outputSize
      type: System.Int64[]
      description: ''
    return:
      type: TorchSharp.NN.AdaptiveAvgPool2D
      description: ''
    content.csharp: public static TorchSharp.NN.AdaptiveAvgPool2D AdaptiveAvgPool2D (long[] outputSize);
  overload: TorchSharp.NN.Module.AdaptiveAvgPool2D*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.AdaptiveAvgPool2D(TorchSharp.Tensor.TorchTensor,System.Int64[])
  id: AdaptiveAvgPool2D(TorchSharp.Tensor.TorchTensor,System.Int64[])
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: AdaptiveAvgPool2D(TorchTensor, Int64[])
  nameWithType: Module.AdaptiveAvgPool2D(TorchTensor, Int64[])
  fullName: TorchSharp.NN.Module.AdaptiveAvgPool2D(TorchTensor, Int64[])
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor AdaptiveAvgPool2D (TorchSharp.Tensor.TorchTensor x, long[] outputSize);
    parameters:
    - id: x
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    - id: outputSize
      type: System.Int64[]
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor AdaptiveAvgPool2D (TorchSharp.Tensor.TorchTensor x, long[] outputSize);
  overload: TorchSharp.NN.Module.AdaptiveAvgPool2D*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.Conv2D(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  id: Conv2D(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Conv2D(Int64, Int64, Int64, Int64, Int64)
  nameWithType: Module.Conv2D(Int64, Int64, Int64, Int64, Int64)
  fullName: TorchSharp.NN.Module.Conv2D(Int64, Int64, Int64, Int64, Int64)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.Conv2D Conv2D (long inputChannel, long outputChannel, long kernelSize, long stride = 1, long padding = 0);
    parameters:
    - id: inputChannel
      type: System.Int64
      description: ''
    - id: outputChannel
      type: System.Int64
      description: ''
    - id: kernelSize
      type: System.Int64
      description: ''
    - id: stride
      type: System.Int64
      description: ''
    - id: padding
      type: System.Int64
      description: ''
    return:
      type: TorchSharp.NN.Conv2D
      description: ''
    content.csharp: public static TorchSharp.NN.Conv2D Conv2D (long inputChannel, long outputChannel, long kernelSize, long stride = 1, long padding = 0);
  overload: TorchSharp.NN.Module.Conv2D*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.Dispose
  id: Dispose
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Dispose()
  nameWithType: Module.Dispose()
  fullName: TorchSharp.NN.Module.Dispose()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  summary: Releases the storage.
  syntax:
    content: public void Dispose ();
    parameters: []
    content.csharp: public void Dispose ();
  overload: TorchSharp.NN.Module.Dispose*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Module.Dispose(Boolean)
  fullName: TorchSharp.NN.Module.Dispose(Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  summary: Implements the .NET Dispose pattern.
  syntax:
    content: protected void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
    content.csharp: protected void Dispose (bool disposing);
  overload: TorchSharp.NN.Module.Dispose*
  exceptions: []
  modifiers.csharp:
  - protected
- uid: TorchSharp.NN.Module.Dropout(System.Boolean,System.Double)
  id: Dropout(System.Boolean,System.Double)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Dropout(Boolean, Double)
  nameWithType: Module.Dropout(Boolean, Double)
  fullName: TorchSharp.NN.Module.Dropout(Boolean, Double)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.Dropout Dropout (bool isTraining, double probability = 0.5);
    parameters:
    - id: isTraining
      type: System.Boolean
      description: ''
    - id: probability
      type: System.Double
      description: ''
    return:
      type: TorchSharp.NN.Dropout
      description: ''
    content.csharp: public static TorchSharp.NN.Dropout Dropout (bool isTraining, double probability = 0.5);
  overload: TorchSharp.NN.Module.Dropout*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.Dropout(TorchSharp.Tensor.TorchTensor,System.Boolean,System.Double)
  id: Dropout(TorchSharp.Tensor.TorchTensor,System.Boolean,System.Double)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Dropout(TorchTensor, Boolean, Double)
  nameWithType: Module.Dropout(TorchTensor, Boolean, Double)
  fullName: TorchSharp.NN.Module.Dropout(TorchTensor, Boolean, Double)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor Dropout (TorchSharp.Tensor.TorchTensor x, bool isTraining, double probability = 0.5);
    parameters:
    - id: x
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    - id: isTraining
      type: System.Boolean
      description: ''
    - id: probability
      type: System.Double
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor Dropout (TorchSharp.Tensor.TorchTensor x, bool isTraining, double probability = 0.5);
  overload: TorchSharp.NN.Module.Dropout*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.Eval
  id: Eval
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Eval()
  nameWithType: Module.Eval()
  fullName: TorchSharp.NN.Module.Eval()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public virtual void Eval ();
    parameters: []
    content.csharp: public virtual void Eval ();
  overload: TorchSharp.NN.Module.Eval*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.FeatureDropout(TorchSharp.Tensor.TorchTensor)
  id: FeatureDropout(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: FeatureDropout(TorchTensor)
  nameWithType: Module.FeatureDropout(TorchTensor)
  fullName: TorchSharp.NN.Module.FeatureDropout(TorchTensor)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor FeatureDropout (TorchSharp.Tensor.TorchTensor x);
    parameters:
    - id: x
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor FeatureDropout (TorchSharp.Tensor.TorchTensor x);
  overload: TorchSharp.NN.Module.FeatureDropout*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.Finalize
  id: Finalize
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Finalize()
  nameWithType: Module.Finalize()
  fullName: TorchSharp.NN.Module.Finalize()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: ~Module ();
    parameters: []
    content.csharp: ~Module ();
  overload: TorchSharp.NN.Module.Finalize*
  exceptions: []
- uid: TorchSharp.NN.Module.Forward(TorchSharp.Tensor.TorchTensor)
  id: Forward(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Forward(TorchTensor)
  nameWithType: Module.Forward(TorchTensor)
  fullName: TorchSharp.NN.Module.Forward(TorchTensor)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public abstract TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor input);
    parameters:
    - id: input
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public abstract TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor input);
  overload: TorchSharp.NN.Module.Forward*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.GetModules
  id: GetModules
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: GetModules()
  nameWithType: Module.GetModules()
  fullName: TorchSharp.NN.Module.GetModules()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<string> GetModules ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    content.csharp: public virtual System.Collections.Generic.IEnumerable<string> GetModules ();
  overload: TorchSharp.NN.Module.GetModules*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.GetName
  id: GetName
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: GetName()
  nameWithType: Module.GetName()
  fullName: TorchSharp.NN.Module.GetName()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public virtual string GetName ();
    parameters: []
    return:
      type: System.String
      description: ''
    content.csharp: public virtual string GetName ();
  overload: TorchSharp.NN.Module.GetName*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.GetParameter(System.String)
  id: GetParameter(System.String)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: GetParameter(String)
  nameWithType: Module.GetParameter(String)
  fullName: TorchSharp.NN.Module.GetParameter(String)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public TorchSharp.Tensor.TorchTensor GetParameter (string name);
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public TorchSharp.Tensor.TorchTensor GetParameter (string name);
  overload: TorchSharp.NN.Module.GetParameter*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.HasParameter(System.String)
  id: HasParameter(System.String)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: HasParameter(String)
  nameWithType: Module.HasParameter(String)
  fullName: TorchSharp.NN.Module.HasParameter(String)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public bool HasParameter (string name);
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.csharp: public bool HasParameter (string name);
  overload: TorchSharp.NN.Module.HasParameter*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.IsTraining
  id: IsTraining
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: IsTraining()
  nameWithType: Module.IsTraining()
  fullName: TorchSharp.NN.Module.IsTraining()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public bool IsTraining ();
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.csharp: public bool IsTraining ();
  overload: TorchSharp.NN.Module.IsTraining*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.Linear(System.Int64,System.Int64,System.Boolean)
  id: Linear(System.Int64,System.Int64,System.Boolean)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Linear(Int64, Int64, Boolean)
  nameWithType: Module.Linear(Int64, Int64, Boolean)
  fullName: TorchSharp.NN.Module.Linear(Int64, Int64, Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.Linear Linear (long inputSize, long outputSize, bool hasBias = false);
    parameters:
    - id: inputSize
      type: System.Int64
      description: ''
    - id: outputSize
      type: System.Int64
      description: ''
    - id: hasBias
      type: System.Boolean
      description: ''
    return:
      type: TorchSharp.NN.Linear
      description: ''
    content.csharp: public static TorchSharp.NN.Linear Linear (long inputSize, long outputSize, bool hasBias = false);
  overload: TorchSharp.NN.Module.Linear*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.LogSoftMax(System.Int64)
  id: LogSoftMax(System.Int64)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: LogSoftMax(Int64)
  nameWithType: Module.LogSoftMax(Int64)
  fullName: TorchSharp.NN.Module.LogSoftMax(Int64)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.LogSoftMax LogSoftMax (long dimension);
    parameters:
    - id: dimension
      type: System.Int64
      description: ''
    return:
      type: TorchSharp.NN.LogSoftMax
      description: ''
    content.csharp: public static TorchSharp.NN.LogSoftMax LogSoftMax (long dimension);
  overload: TorchSharp.NN.Module.LogSoftMax*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.LogSoftMax(TorchSharp.Tensor.TorchTensor,System.Int64)
  id: LogSoftMax(TorchSharp.Tensor.TorchTensor,System.Int64)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: LogSoftMax(TorchTensor, Int64)
  nameWithType: Module.LogSoftMax(TorchTensor, Int64)
  fullName: TorchSharp.NN.Module.LogSoftMax(TorchTensor, Int64)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor LogSoftMax (TorchSharp.Tensor.TorchTensor x, long dimension);
    parameters:
    - id: x
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    - id: dimension
      type: System.Int64
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor LogSoftMax (TorchSharp.Tensor.TorchTensor x, long dimension);
  overload: TorchSharp.NN.Module.LogSoftMax*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.MaxPool2D(System.Int64[],System.Int64[])
  id: MaxPool2D(System.Int64[],System.Int64[])
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: MaxPool2D(Int64[], Int64[])
  nameWithType: Module.MaxPool2D(Int64[], Int64[])
  fullName: TorchSharp.NN.Module.MaxPool2D(Int64[], Int64[])
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.MaxPool2D MaxPool2D (long[] kernelSize, long[] stride = null);
    parameters:
    - id: kernelSize
      type: System.Int64[]
      description: ''
    - id: stride
      type: System.Int64[]
      description: ''
    return:
      type: TorchSharp.NN.MaxPool2D
      description: ''
    content.csharp: public static TorchSharp.NN.MaxPool2D MaxPool2D (long[] kernelSize, long[] stride = null);
  overload: TorchSharp.NN.Module.MaxPool2D*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.MaxPool2D(TorchSharp.Tensor.TorchTensor,System.Int64[],System.Int64[])
  id: MaxPool2D(TorchSharp.Tensor.TorchTensor,System.Int64[],System.Int64[])
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: MaxPool2D(TorchTensor, Int64[], Int64[])
  nameWithType: Module.MaxPool2D(TorchTensor, Int64[], Int64[])
  fullName: TorchSharp.NN.Module.MaxPool2D(TorchTensor, Int64[], Int64[])
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor MaxPool2D (TorchSharp.Tensor.TorchTensor x, long[] kernelSize, long[] stride = null);
    parameters:
    - id: x
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    - id: kernelSize
      type: System.Int64[]
      description: ''
    - id: stride
      type: System.Int64[]
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor MaxPool2D (TorchSharp.Tensor.TorchTensor x, long[] kernelSize, long[] stride = null);
  overload: TorchSharp.NN.Module.MaxPool2D*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.Modules
  id: Modules
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Modules
  nameWithType: Module.Modules
  fullName: TorchSharp.NN.Module.Modules
  type: Property
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: protected System.Collections.Generic.List<TorchSharp.NN.Module> Modules { get; }
    return:
      type: System.Collections.Generic.List{TorchSharp.NN.Module}
      description: ''
    content.csharp: protected System.Collections.Generic.List<TorchSharp.NN.Module> Modules { get; }
  overload: TorchSharp.NN.Module.Modules*
  exceptions: []
  modifiers.csharp:
  - protected
  - get
- uid: TorchSharp.NN.Module.NamedParameters
  id: NamedParameters
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: NamedParameters()
  nameWithType: Module.NamedParameters()
  fullName: TorchSharp.NN.Module.NamedParameters()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<ValueTuple<string,TorchSharp.Tensor.TorchTensor>> NamedParameters ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,TorchSharp.Tensor.TorchTensor}}
      description: ''
    content.csharp: public virtual System.Collections.Generic.IEnumerable<ValueTuple<string,TorchSharp.Tensor.TorchTensor>> NamedParameters ();
  overload: TorchSharp.NN.Module.NamedParameters*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.Parameters
  id: Parameters
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Parameters()
  nameWithType: Module.Parameters()
  fullName: TorchSharp.NN.Module.Parameters()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<TorchSharp.Tensor.TorchTensor> Parameters ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TorchSharp.Tensor.TorchTensor}
      description: ''
    content.csharp: public virtual System.Collections.Generic.IEnumerable<TorchSharp.Tensor.TorchTensor> Parameters ();
  overload: TorchSharp.NN.Module.Parameters*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.RegisterModule(TorchSharp.NN.Module)
  id: RegisterModule(TorchSharp.NN.Module)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: RegisterModule(Module)
  nameWithType: Module.RegisterModule(Module)
  fullName: TorchSharp.NN.Module.RegisterModule(Module)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public virtual void RegisterModule (TorchSharp.NN.Module module);
    parameters:
    - id: module
      type: TorchSharp.NN.Module
      description: ''
    content.csharp: public virtual void RegisterModule (TorchSharp.NN.Module module);
  overload: TorchSharp.NN.Module.RegisterModule*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.Relu(System.Boolean)
  id: Relu(System.Boolean)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Relu(Boolean)
  nameWithType: Module.Relu(Boolean)
  fullName: TorchSharp.NN.Module.Relu(Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.ReLU Relu (bool inPlace = false);
    parameters:
    - id: inPlace
      type: System.Boolean
      description: ''
    return:
      type: TorchSharp.NN.ReLU
      description: ''
    content.csharp: public static TorchSharp.NN.ReLU Relu (bool inPlace = false);
  overload: TorchSharp.NN.Module.Relu*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.Relu(TorchSharp.Tensor.TorchTensor,System.Boolean)
  id: Relu(TorchSharp.Tensor.TorchTensor,System.Boolean)
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Relu(TorchTensor, Boolean)
  nameWithType: Module.Relu(TorchTensor, Boolean)
  fullName: TorchSharp.NN.Module.Relu(TorchTensor, Boolean)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.Tensor.TorchTensor Relu (TorchSharp.Tensor.TorchTensor x, bool inPlace = false);
    parameters:
    - id: x
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    - id: inPlace
      type: System.Boolean
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public static TorchSharp.Tensor.TorchTensor Relu (TorchSharp.Tensor.TorchTensor x, bool inPlace = false);
  overload: TorchSharp.NN.Module.Relu*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.Sequential(TorchSharp.NN.Module[])
  id: Sequential(TorchSharp.NN.Module[])
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Sequential(Module[])
  nameWithType: Module.Sequential(Module[])
  fullName: TorchSharp.NN.Module.Sequential(Module[])
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.Sequential Sequential (TorchSharp.NN.Module[] modules);
    parameters:
    - id: modules
      type: TorchSharp.NN.Module[]
      description: ''
    return:
      type: TorchSharp.NN.Sequential
      description: ''
    content.csharp: public static TorchSharp.NN.Sequential Sequential (TorchSharp.NN.Module[] modules);
  overload: TorchSharp.NN.Module.Sequential*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.Module.Train
  id: Train
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: Train()
  nameWithType: Module.Train()
  fullName: TorchSharp.NN.Module.Train()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public virtual void Train ();
    parameters: []
    content.csharp: public virtual void Train ();
  overload: TorchSharp.NN.Module.Train*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Module.ZeroGrad
  id: ZeroGrad
  parent: TorchSharp.NN.Module
  langs:
  - csharp
  name: ZeroGrad()
  nameWithType: Module.ZeroGrad()
  fullName: TorchSharp.NN.Module.ZeroGrad()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public virtual void ZeroGrad ();
    parameters: []
    content.csharp: public virtual void ZeroGrad ();
  overload: TorchSharp.NN.Module.ZeroGrad*
  exceptions: []
  modifiers.csharp:
  - public
references:
- uid: TorchSharp.NN
  commentId: N:TorchSharp.NN
  isExternal: false
  name: TorchSharp.NN
  nameWithType: TorchSharp.NN
  fullName: TorchSharp.NN
  type: namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TorchSharp.NN.Module.#ctor(TorchSharp.NN.Parameter[])
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Module(Parameter[])
  nameWithType: Module.Module(Parameter[])
  fullName: TorchSharp.NN.Module.Module(Parameter[])
  type: constructor
- uid: TorchSharp.NN.Parameter
  name: Parameter
  nameWithType: Parameter
  fullName: TorchSharp.NN.Parameter
- uid: TorchSharp.NN.Parameter[]
  parent: TorchSharp.NN
  name: Parameter[]
  nameWithType: Parameter[]
  fullName: TorchSharp.NN.Parameter[]
  spec.csharp:
  - uid: TorchSharp.NN.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: TorchSharp.NN.Parameter
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: TorchSharp.NN.Module.AdaptiveAvgPool2D(System.Int64[])
  parent: TorchSharp.NN.Module
  isExternal: false
  name: AdaptiveAvgPool2D(Int64[])
  nameWithType: Module.AdaptiveAvgPool2D(Int64[])
  fullName: TorchSharp.NN.Module.AdaptiveAvgPool2D(Int64[])
  type: method
- uid: TorchSharp.NN.AdaptiveAvgPool2D
  parent: TorchSharp.NN
  isExternal: false
  name: AdaptiveAvgPool2D
  nameWithType: AdaptiveAvgPool2D
  fullName: TorchSharp.NN.AdaptiveAvgPool2D
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int64[]
  parent: System
  name: Int64[]
  nameWithType: Int64[]
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: TorchSharp.NN.Module.AdaptiveAvgPool2D(TorchSharp.Tensor.TorchTensor,System.Int64[])
  parent: TorchSharp.NN.Module
  isExternal: false
  name: AdaptiveAvgPool2D(TorchTensor, Int64[])
  nameWithType: Module.AdaptiveAvgPool2D(TorchTensor, Int64[])
  fullName: TorchSharp.NN.Module.AdaptiveAvgPool2D(TorchTensor, Int64[])
  type: method
- uid: TorchSharp.Tensor.TorchTensor
  parent: TorchSharp.Tensor
  isExternal: false
  name: TorchTensor
  nameWithType: TorchTensor
  fullName: TorchSharp.Tensor.TorchTensor
- uid: TorchSharp.NN.Module.Conv2D(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Conv2D(Int64, Int64, Int64, Int64, Int64)
  nameWithType: Module.Conv2D(Int64, Int64, Int64, Int64, Int64)
  fullName: TorchSharp.NN.Module.Conv2D(Int64, Int64, Int64, Int64, Int64)
  type: method
- uid: TorchSharp.NN.Conv2D
  parent: TorchSharp.NN
  isExternal: false
  name: Conv2D
  nameWithType: Conv2D
  fullName: TorchSharp.NN.Conv2D
- uid: TorchSharp.NN.Module.Dispose
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dispose()
  nameWithType: Module.Dispose()
  fullName: TorchSharp.NN.Module.Dispose()
  type: method
- uid: TorchSharp.NN.Module.Dispose(System.Boolean)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Module.Dispose(Boolean)
  fullName: TorchSharp.NN.Module.Dispose(Boolean)
  type: method
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TorchSharp.NN.Module.Dropout(System.Boolean,System.Double)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dropout(Boolean, Double)
  nameWithType: Module.Dropout(Boolean, Double)
  fullName: TorchSharp.NN.Module.Dropout(Boolean, Double)
  type: method
- uid: TorchSharp.NN.Dropout
  parent: TorchSharp.NN
  isExternal: false
  name: Dropout
  nameWithType: Dropout
  fullName: TorchSharp.NN.Dropout
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: TorchSharp.NN.Module.Dropout(TorchSharp.Tensor.TorchTensor,System.Boolean,System.Double)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dropout(TorchTensor, Boolean, Double)
  nameWithType: Module.Dropout(TorchTensor, Boolean, Double)
  fullName: TorchSharp.NN.Module.Dropout(TorchTensor, Boolean, Double)
  type: method
- uid: TorchSharp.NN.Module.Eval
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Eval()
  nameWithType: Module.Eval()
  fullName: TorchSharp.NN.Module.Eval()
  type: method
- uid: TorchSharp.NN.Module.FeatureDropout(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: FeatureDropout(TorchTensor)
  nameWithType: Module.FeatureDropout(TorchTensor)
  fullName: TorchSharp.NN.Module.FeatureDropout(TorchTensor)
  type: method
- uid: TorchSharp.NN.Module.Finalize
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Finalize()
  nameWithType: Module.Finalize()
  fullName: TorchSharp.NN.Module.Finalize()
  type: method
- uid: TorchSharp.NN.Module.Forward(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Forward(TorchTensor)
  nameWithType: Module.Forward(TorchTensor)
  fullName: TorchSharp.NN.Module.Forward(TorchTensor)
  type: method
- uid: TorchSharp.NN.Module.GetModules
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetModules()
  nameWithType: Module.GetModules()
  fullName: TorchSharp.NN.Module.GetModules()
  type: method
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.Generic.IEnumerable
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.Module.GetName
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetName()
  nameWithType: Module.GetName()
  fullName: TorchSharp.NN.Module.GetName()
  type: method
- uid: TorchSharp.NN.Module.GetParameter(System.String)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetParameter(String)
  nameWithType: Module.GetParameter(String)
  fullName: TorchSharp.NN.Module.GetParameter(String)
  type: method
- uid: TorchSharp.NN.Module.HasParameter(System.String)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: HasParameter(String)
  nameWithType: Module.HasParameter(String)
  fullName: TorchSharp.NN.Module.HasParameter(String)
  type: method
- uid: TorchSharp.NN.Module.IsTraining
  parent: TorchSharp.NN.Module
  isExternal: false
  name: IsTraining()
  nameWithType: Module.IsTraining()
  fullName: TorchSharp.NN.Module.IsTraining()
  type: method
- uid: TorchSharp.NN.Module.Linear(System.Int64,System.Int64,System.Boolean)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Linear(Int64, Int64, Boolean)
  nameWithType: Module.Linear(Int64, Int64, Boolean)
  fullName: TorchSharp.NN.Module.Linear(Int64, Int64, Boolean)
  type: method
- uid: TorchSharp.NN.Linear
  parent: TorchSharp.NN
  isExternal: false
  name: Linear
  nameWithType: Linear
  fullName: TorchSharp.NN.Linear
- uid: TorchSharp.NN.Module.LogSoftMax(System.Int64)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: LogSoftMax(Int64)
  nameWithType: Module.LogSoftMax(Int64)
  fullName: TorchSharp.NN.Module.LogSoftMax(Int64)
  type: method
- uid: TorchSharp.NN.LogSoftMax
  parent: TorchSharp.NN
  isExternal: false
  name: LogSoftMax
  nameWithType: LogSoftMax
  fullName: TorchSharp.NN.LogSoftMax
- uid: TorchSharp.NN.Module.LogSoftMax(TorchSharp.Tensor.TorchTensor,System.Int64)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: LogSoftMax(TorchTensor, Int64)
  nameWithType: Module.LogSoftMax(TorchTensor, Int64)
  fullName: TorchSharp.NN.Module.LogSoftMax(TorchTensor, Int64)
  type: method
- uid: TorchSharp.NN.Module.MaxPool2D(System.Int64[],System.Int64[])
  parent: TorchSharp.NN.Module
  isExternal: false
  name: MaxPool2D(Int64[], Int64[])
  nameWithType: Module.MaxPool2D(Int64[], Int64[])
  fullName: TorchSharp.NN.Module.MaxPool2D(Int64[], Int64[])
  type: method
- uid: TorchSharp.NN.MaxPool2D
  parent: TorchSharp.NN
  isExternal: false
  name: MaxPool2D
  nameWithType: MaxPool2D
  fullName: TorchSharp.NN.MaxPool2D
- uid: TorchSharp.NN.Module.MaxPool2D(TorchSharp.Tensor.TorchTensor,System.Int64[],System.Int64[])
  parent: TorchSharp.NN.Module
  isExternal: false
  name: MaxPool2D(TorchTensor, Int64[], Int64[])
  nameWithType: Module.MaxPool2D(TorchTensor, Int64[], Int64[])
  fullName: TorchSharp.NN.Module.MaxPool2D(TorchTensor, Int64[], Int64[])
  type: method
- uid: TorchSharp.NN.Module.Modules
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Modules
  nameWithType: Module.Modules
  fullName: TorchSharp.NN.Module.Modules
  type: property
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List
  nameWithType: List
  fullName: System.Collections.Generic.List
- uid: TorchSharp.NN.Module
  name: Module
  nameWithType: Module
  fullName: TorchSharp.NN.Module
- uid: System.Collections.Generic.List{TorchSharp.NN.Module}
  parent: System.Collections.Generic
  name: List<Module>
  nameWithType: List<Module>
  fullName: System.Collections.Generic.List<TorchSharp.NN.Module>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
  - name: <
    nameWithType: <
    fullName: <
  - uid: TorchSharp.NN.Module
    name: Module
    nameWithType: Module
    fullName: TorchSharp.NN.Module
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.Module.NamedParameters
  parent: TorchSharp.NN.Module
  isExternal: false
  name: NamedParameters()
  nameWithType: Module.NamedParameters()
  fullName: TorchSharp.NN.Module.NamedParameters()
  type: method
- uid: System.ValueTuple`2
  isExternal: true
  name: ValueTuple
  nameWithType: ValueTuple
  fullName: System.ValueTuple
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,TorchSharp.Tensor.TorchTensor}}
  parent: System.Collections.Generic
  name: IEnumerable<ValueTuple<String,TorchTensor>>
  nameWithType: IEnumerable<ValueTuple<String,TorchTensor>>
  fullName: System.Collections.Generic.IEnumerable<System.ValueTuple<System.String,TorchSharp.Tensor.TorchTensor>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.Module.Parameters
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Parameters()
  nameWithType: Module.Parameters()
  fullName: TorchSharp.NN.Module.Parameters()
  type: method
- uid: System.Collections.Generic.IEnumerable{TorchSharp.Tensor.TorchTensor}
  parent: System.Collections.Generic
  name: IEnumerable<TorchTensor>
  nameWithType: IEnumerable<TorchTensor>
  fullName: System.Collections.Generic.IEnumerable<TorchSharp.Tensor.TorchTensor>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.Module.RegisterModule(TorchSharp.NN.Module)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: RegisterModule(Module)
  nameWithType: Module.RegisterModule(Module)
  fullName: TorchSharp.NN.Module.RegisterModule(Module)
  type: method
- uid: TorchSharp.NN.Module.Relu(System.Boolean)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Relu(Boolean)
  nameWithType: Module.Relu(Boolean)
  fullName: TorchSharp.NN.Module.Relu(Boolean)
  type: method
- uid: TorchSharp.NN.ReLU
  parent: TorchSharp.NN
  isExternal: false
  name: ReLU
  nameWithType: ReLU
  fullName: TorchSharp.NN.ReLU
- uid: TorchSharp.NN.Module.Relu(TorchSharp.Tensor.TorchTensor,System.Boolean)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Relu(TorchTensor, Boolean)
  nameWithType: Module.Relu(TorchTensor, Boolean)
  fullName: TorchSharp.NN.Module.Relu(TorchTensor, Boolean)
  type: method
- uid: TorchSharp.NN.Module.Sequential(TorchSharp.NN.Module[])
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Sequential(Module[])
  nameWithType: Module.Sequential(Module[])
  fullName: TorchSharp.NN.Module.Sequential(Module[])
  type: method
- uid: TorchSharp.NN.Sequential
  parent: TorchSharp.NN
  isExternal: false
  name: Sequential
  nameWithType: Sequential
  fullName: TorchSharp.NN.Sequential
- uid: TorchSharp.NN.Module[]
  parent: TorchSharp.NN
  name: Module[]
  nameWithType: Module[]
  fullName: TorchSharp.NN.Module[]
  spec.csharp:
  - uid: TorchSharp.NN.Module
    name: Module
    nameWithType: Module
    fullName: TorchSharp.NN.Module
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: TorchSharp.NN.Module.Train
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Train()
  nameWithType: Module.Train()
  fullName: TorchSharp.NN.Module.Train()
  type: method
- uid: TorchSharp.NN.Module.ZeroGrad
  parent: TorchSharp.NN.Module
  isExternal: false
  name: ZeroGrad()
  nameWithType: Module.ZeroGrad()
  fullName: TorchSharp.NN.Module.ZeroGrad()
  type: method
- uid: TorchSharp.NN.Module.#ctor*
  commentId: Overload:TorchSharp.NN.Module.#ctor
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Module
  nameWithType: Module.Module
  fullName: TorchSharp.NN.Module.Module
  type: constructor
- uid: TorchSharp.NN.Module.AdaptiveAvgPool2D*
  commentId: Overload:TorchSharp.NN.Module.AdaptiveAvgPool2D
  parent: TorchSharp.NN.Module
  isExternal: false
  name: AdaptiveAvgPool2D
  nameWithType: Module.AdaptiveAvgPool2D
  fullName: TorchSharp.NN.Module.AdaptiveAvgPool2D
  type: method
- uid: TorchSharp.NN.Module.Conv2D*
  commentId: Overload:TorchSharp.NN.Module.Conv2D
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Conv2D
  nameWithType: Module.Conv2D
  fullName: TorchSharp.NN.Module.Conv2D
  type: method
- uid: TorchSharp.NN.Module.Dispose*
  commentId: Overload:TorchSharp.NN.Module.Dispose
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dispose
  nameWithType: Module.Dispose
  fullName: TorchSharp.NN.Module.Dispose
  type: method
- uid: TorchSharp.NN.Module.Dropout*
  commentId: Overload:TorchSharp.NN.Module.Dropout
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dropout
  nameWithType: Module.Dropout
  fullName: TorchSharp.NN.Module.Dropout
  type: method
- uid: TorchSharp.NN.Module.Eval*
  commentId: Overload:TorchSharp.NN.Module.Eval
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Eval
  nameWithType: Module.Eval
  fullName: TorchSharp.NN.Module.Eval
  type: method
- uid: TorchSharp.NN.Module.FeatureDropout*
  commentId: Overload:TorchSharp.NN.Module.FeatureDropout
  parent: TorchSharp.NN.Module
  isExternal: false
  name: FeatureDropout
  nameWithType: Module.FeatureDropout
  fullName: TorchSharp.NN.Module.FeatureDropout
  type: method
- uid: TorchSharp.NN.Module.Finalize*
  commentId: Overload:TorchSharp.NN.Module.Finalize
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Finalize
  nameWithType: Module.Finalize
  fullName: TorchSharp.NN.Module.Finalize
  type: method
- uid: TorchSharp.NN.Module.Forward*
  commentId: Overload:TorchSharp.NN.Module.Forward
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Forward
  nameWithType: Module.Forward
  fullName: TorchSharp.NN.Module.Forward
  type: method
- uid: TorchSharp.NN.Module.GetModules*
  commentId: Overload:TorchSharp.NN.Module.GetModules
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetModules
  nameWithType: Module.GetModules
  fullName: TorchSharp.NN.Module.GetModules
  type: method
- uid: TorchSharp.NN.Module.GetName*
  commentId: Overload:TorchSharp.NN.Module.GetName
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetName
  nameWithType: Module.GetName
  fullName: TorchSharp.NN.Module.GetName
  type: method
- uid: TorchSharp.NN.Module.GetParameter*
  commentId: Overload:TorchSharp.NN.Module.GetParameter
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetParameter
  nameWithType: Module.GetParameter
  fullName: TorchSharp.NN.Module.GetParameter
  type: method
- uid: TorchSharp.NN.Module.HasParameter*
  commentId: Overload:TorchSharp.NN.Module.HasParameter
  parent: TorchSharp.NN.Module
  isExternal: false
  name: HasParameter
  nameWithType: Module.HasParameter
  fullName: TorchSharp.NN.Module.HasParameter
  type: method
- uid: TorchSharp.NN.Module.IsTraining*
  commentId: Overload:TorchSharp.NN.Module.IsTraining
  parent: TorchSharp.NN.Module
  isExternal: false
  name: IsTraining
  nameWithType: Module.IsTraining
  fullName: TorchSharp.NN.Module.IsTraining
  type: method
- uid: TorchSharp.NN.Module.Linear*
  commentId: Overload:TorchSharp.NN.Module.Linear
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Linear
  nameWithType: Module.Linear
  fullName: TorchSharp.NN.Module.Linear
  type: method
- uid: TorchSharp.NN.Module.LogSoftMax*
  commentId: Overload:TorchSharp.NN.Module.LogSoftMax
  parent: TorchSharp.NN.Module
  isExternal: false
  name: LogSoftMax
  nameWithType: Module.LogSoftMax
  fullName: TorchSharp.NN.Module.LogSoftMax
  type: method
- uid: TorchSharp.NN.Module.MaxPool2D*
  commentId: Overload:TorchSharp.NN.Module.MaxPool2D
  parent: TorchSharp.NN.Module
  isExternal: false
  name: MaxPool2D
  nameWithType: Module.MaxPool2D
  fullName: TorchSharp.NN.Module.MaxPool2D
  type: method
- uid: TorchSharp.NN.Module.Modules*
  commentId: Overload:TorchSharp.NN.Module.Modules
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Modules
  nameWithType: Module.Modules
  fullName: TorchSharp.NN.Module.Modules
  type: property
- uid: TorchSharp.NN.Module.NamedParameters*
  commentId: Overload:TorchSharp.NN.Module.NamedParameters
  parent: TorchSharp.NN.Module
  isExternal: false
  name: NamedParameters
  nameWithType: Module.NamedParameters
  fullName: TorchSharp.NN.Module.NamedParameters
  type: method
- uid: TorchSharp.NN.Module.Parameters*
  commentId: Overload:TorchSharp.NN.Module.Parameters
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Parameters
  nameWithType: Module.Parameters
  fullName: TorchSharp.NN.Module.Parameters
  type: method
- uid: TorchSharp.NN.Module.RegisterModule*
  commentId: Overload:TorchSharp.NN.Module.RegisterModule
  parent: TorchSharp.NN.Module
  isExternal: false
  name: RegisterModule
  nameWithType: Module.RegisterModule
  fullName: TorchSharp.NN.Module.RegisterModule
  type: method
- uid: TorchSharp.NN.Module.Relu*
  commentId: Overload:TorchSharp.NN.Module.Relu
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Relu
  nameWithType: Module.Relu
  fullName: TorchSharp.NN.Module.Relu
  type: method
- uid: TorchSharp.NN.Module.Sequential*
  commentId: Overload:TorchSharp.NN.Module.Sequential
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Sequential
  nameWithType: Module.Sequential
  fullName: TorchSharp.NN.Module.Sequential
  type: method
- uid: TorchSharp.NN.Module.Train*
  commentId: Overload:TorchSharp.NN.Module.Train
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Train
  nameWithType: Module.Train
  fullName: TorchSharp.NN.Module.Train
  type: method
- uid: TorchSharp.NN.Module.ZeroGrad*
  commentId: Overload:TorchSharp.NN.Module.ZeroGrad
  parent: TorchSharp.NN.Module
  isExternal: false
  name: ZeroGrad
  nameWithType: Module.ZeroGrad
  fullName: TorchSharp.NN.Module.ZeroGrad
  type: method
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: TorchSharp.NN.ProvidedModule
  parent: TorchSharp.NN
  isExternal: false
  name: ProvidedModule
  nameWithType: TorchSharp.NN.ProvidedModule
  fullName: TorchSharp.NN.ProvidedModule
  type: class
