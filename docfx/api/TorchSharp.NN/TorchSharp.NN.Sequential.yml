### YamlMime:ManagedReference
items:
- uid: TorchSharp.NN.Sequential
  id: Sequential
  children:
  - TorchSharp.NN.Sequential.#ctor(System.Collections.Generic.IEnumerable{TorchSharp.NN.Module})
  - TorchSharp.NN.Sequential.Eval
  - TorchSharp.NN.Sequential.Forward(TorchSharp.Tensor.TorchTensor)
  - TorchSharp.NN.Sequential.GetModules
  - TorchSharp.NN.Sequential.Train
  - TorchSharp.NN.Sequential.ZeroGrad
  langs:
  - csharp
  name: Sequential
  nameWithType: TorchSharp.NN.Sequential
  fullName: TorchSharp.NN.Sequential
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: 'public class Sequential : TorchSharp.NN.ProvidedModule'
    content.csharp: 'public class Sequential : TorchSharp.NN.ProvidedModule'
  inheritance:
  - System.Object
  - TorchSharp.NN.Module
  - TorchSharp.NN.ProvidedModule
  implements: []
  inheritedMembers:
  - TorchSharp.NN.Module.Dispose
  - TorchSharp.NN.Module.Dispose(System.Boolean)
  - TorchSharp.NN.Module.GetName
  - TorchSharp.NN.Module.GetParameter(System.String)
  - TorchSharp.NN.Module.HasParameter(System.String)
  - TorchSharp.NN.Module.IsTraining
  - TorchSharp.NN.Module.Modules
  - TorchSharp.NN.Module.NamedParameters
  - TorchSharp.NN.Module.Parameters
  - TorchSharp.NN.Module.RegisterModule(TorchSharp.NN.Module)
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Sequential.#ctor(System.Collections.Generic.IEnumerable{TorchSharp.NN.Module})
  id: '#ctor(System.Collections.Generic.IEnumerable{TorchSharp.NN.Module})'
  parent: TorchSharp.NN.Sequential
  langs:
  - csharp
  name: Sequential(IEnumerable<Module>)
  nameWithType: Sequential.Sequential(IEnumerable<Module>)
  fullName: TorchSharp.NN.Sequential.Sequential(IEnumerable<Module>)
  type: Constructor
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public Sequential (System.Collections.Generic.IEnumerable<TorchSharp.NN.Module> modules);
    parameters:
    - id: modules
      type: System.Collections.Generic.IEnumerable{TorchSharp.NN.Module}
      description: ''
    content.csharp: public Sequential (System.Collections.Generic.IEnumerable<TorchSharp.NN.Module> modules);
  overload: TorchSharp.NN.Sequential.#ctor*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Sequential.Eval
  id: Eval
  parent: TorchSharp.NN.Sequential
  langs:
  - csharp
  name: Eval()
  nameWithType: Sequential.Eval()
  fullName: TorchSharp.NN.Sequential.Eval()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public override void Eval ();
    parameters: []
    content.csharp: public override void Eval ();
  overload: TorchSharp.NN.Sequential.Eval*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Sequential.Forward(TorchSharp.Tensor.TorchTensor)
  id: Forward(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.Sequential
  langs:
  - csharp
  name: Forward(TorchTensor)
  nameWithType: Sequential.Forward(TorchTensor)
  fullName: TorchSharp.NN.Sequential.Forward(TorchTensor)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public override TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor tensor);
    parameters:
    - id: tensor
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public override TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor tensor);
  overload: TorchSharp.NN.Sequential.Forward*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Sequential.GetModules
  id: GetModules
  parent: TorchSharp.NN.Sequential
  langs:
  - csharp
  name: GetModules()
  nameWithType: Sequential.GetModules()
  fullName: TorchSharp.NN.Sequential.GetModules()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public override System.Collections.Generic.IEnumerable<string> GetModules ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    content.csharp: public override System.Collections.Generic.IEnumerable<string> GetModules ();
  overload: TorchSharp.NN.Sequential.GetModules*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Sequential.Train
  id: Train
  parent: TorchSharp.NN.Sequential
  langs:
  - csharp
  name: Train()
  nameWithType: Sequential.Train()
  fullName: TorchSharp.NN.Sequential.Train()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public override void Train ();
    parameters: []
    content.csharp: public override void Train ();
  overload: TorchSharp.NN.Sequential.Train*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Sequential.ZeroGrad
  id: ZeroGrad
  parent: TorchSharp.NN.Sequential
  langs:
  - csharp
  name: ZeroGrad()
  nameWithType: Sequential.ZeroGrad()
  fullName: TorchSharp.NN.Sequential.ZeroGrad()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public override void ZeroGrad ();
    parameters: []
    content.csharp: public override void ZeroGrad ();
  overload: TorchSharp.NN.Sequential.ZeroGrad*
  exceptions: []
  modifiers.csharp:
  - public
references:
- uid: TorchSharp.NN
  commentId: N:TorchSharp.NN
  isExternal: false
  name: TorchSharp.NN
  nameWithType: TorchSharp.NN
  fullName: TorchSharp.NN
  type: namespace
- uid: TorchSharp.NN.ProvidedModule
  parent: TorchSharp.NN
  isExternal: false
  name: ProvidedModule
  nameWithType: ProvidedModule
  fullName: TorchSharp.NN.ProvidedModule
- uid: TorchSharp.NN.Sequential.#ctor(System.Collections.Generic.IEnumerable{TorchSharp.NN.Module})
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: Sequential(IEnumerable<Module>)
  nameWithType: Sequential.Sequential(IEnumerable<Module>)
  fullName: TorchSharp.NN.Sequential.Sequential(IEnumerable<Module>)
  type: constructor
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.Generic.IEnumerable
- uid: TorchSharp.NN.Module
  name: Module
  nameWithType: Module
  fullName: TorchSharp.NN.Module
- uid: System.Collections.Generic.IEnumerable{TorchSharp.NN.Module}
  parent: System.Collections.Generic
  name: IEnumerable<Module>
  nameWithType: IEnumerable<Module>
  fullName: System.Collections.Generic.IEnumerable<TorchSharp.NN.Module>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TorchSharp.NN.Module
    name: Module
    nameWithType: Module
    fullName: TorchSharp.NN.Module
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.Sequential.Eval
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: Eval()
  nameWithType: Sequential.Eval()
  fullName: TorchSharp.NN.Sequential.Eval()
  type: method
- uid: TorchSharp.NN.Sequential.Forward(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: Forward(TorchTensor)
  nameWithType: Sequential.Forward(TorchTensor)
  fullName: TorchSharp.NN.Sequential.Forward(TorchTensor)
  type: method
- uid: TorchSharp.Tensor.TorchTensor
  parent: TorchSharp.Tensor
  isExternal: false
  name: TorchTensor
  nameWithType: TorchTensor
  fullName: TorchSharp.Tensor.TorchTensor
- uid: TorchSharp.NN.Sequential.GetModules
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: GetModules()
  nameWithType: Sequential.GetModules()
  fullName: TorchSharp.NN.Sequential.GetModules()
  type: method
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.Sequential.Train
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: Train()
  nameWithType: Sequential.Train()
  fullName: TorchSharp.NN.Sequential.Train()
  type: method
- uid: TorchSharp.NN.Sequential.ZeroGrad
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: ZeroGrad()
  nameWithType: Sequential.ZeroGrad()
  fullName: TorchSharp.NN.Sequential.ZeroGrad()
  type: method
- uid: TorchSharp.NN.Sequential.#ctor*
  commentId: Overload:TorchSharp.NN.Sequential.#ctor
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: Sequential
  nameWithType: Sequential.Sequential
  fullName: TorchSharp.NN.Sequential.Sequential
  type: constructor
- uid: TorchSharp.NN.Sequential.Eval*
  commentId: Overload:TorchSharp.NN.Sequential.Eval
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: Eval
  nameWithType: Sequential.Eval
  fullName: TorchSharp.NN.Sequential.Eval
  type: method
- uid: TorchSharp.NN.Sequential.Forward*
  commentId: Overload:TorchSharp.NN.Sequential.Forward
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: Forward
  nameWithType: Sequential.Forward
  fullName: TorchSharp.NN.Sequential.Forward
  type: method
- uid: TorchSharp.NN.Sequential.GetModules*
  commentId: Overload:TorchSharp.NN.Sequential.GetModules
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: GetModules
  nameWithType: Sequential.GetModules
  fullName: TorchSharp.NN.Sequential.GetModules
  type: method
- uid: TorchSharp.NN.Sequential.Train*
  commentId: Overload:TorchSharp.NN.Sequential.Train
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: Train
  nameWithType: Sequential.Train
  fullName: TorchSharp.NN.Sequential.Train
  type: method
- uid: TorchSharp.NN.Sequential.ZeroGrad*
  commentId: Overload:TorchSharp.NN.Sequential.ZeroGrad
  parent: TorchSharp.NN.Sequential
  isExternal: false
  name: ZeroGrad
  nameWithType: Sequential.ZeroGrad
  fullName: TorchSharp.NN.Sequential.ZeroGrad
  type: method
- uid: TorchSharp.NN.Module.Dispose
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dispose()
  nameWithType: Module.Dispose()
  fullName: TorchSharp.NN.Module.Dispose()
  type: method
- uid: TorchSharp.NN.Module.Dispose(System.Boolean)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Module.Dispose(Boolean)
  fullName: TorchSharp.NN.Module.Dispose(Boolean)
  type: method
- uid: TorchSharp.NN.Module.GetName
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetName()
  nameWithType: Module.GetName()
  fullName: TorchSharp.NN.Module.GetName()
  type: method
- uid: TorchSharp.NN.Module.GetParameter(System.String)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetParameter(String)
  nameWithType: Module.GetParameter(String)
  fullName: TorchSharp.NN.Module.GetParameter(String)
  type: method
- uid: TorchSharp.NN.Module.HasParameter(System.String)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: HasParameter(String)
  nameWithType: Module.HasParameter(String)
  fullName: TorchSharp.NN.Module.HasParameter(String)
  type: method
- uid: TorchSharp.NN.Module.IsTraining
  parent: TorchSharp.NN.Module
  isExternal: false
  name: IsTraining()
  nameWithType: Module.IsTraining()
  fullName: TorchSharp.NN.Module.IsTraining()
  type: method
- uid: TorchSharp.NN.Module.Modules
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Modules
  nameWithType: Module.Modules
  fullName: TorchSharp.NN.Module.Modules
  type: property
- uid: TorchSharp.NN.Module.NamedParameters
  parent: TorchSharp.NN.Module
  isExternal: false
  name: NamedParameters()
  nameWithType: Module.NamedParameters()
  fullName: TorchSharp.NN.Module.NamedParameters()
  type: method
- uid: TorchSharp.NN.Module.Parameters
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Parameters()
  nameWithType: Module.Parameters()
  fullName: TorchSharp.NN.Module.Parameters()
  type: method
- uid: TorchSharp.NN.Module.RegisterModule(TorchSharp.NN.Module)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: RegisterModule(Module)
  nameWithType: Module.RegisterModule(Module)
  fullName: TorchSharp.NN.Module.RegisterModule(Module)
  type: method
