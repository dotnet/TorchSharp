### YamlMime:ManagedReference
items:
- uid: TorchSharp.NN.LogSoftMax
  id: LogSoftMax
  children:
  - TorchSharp.NN.LogSoftMax.Forward(TorchSharp.Tensor.TorchTensor)
  langs:
  - csharp
  name: LogSoftMax
  nameWithType: TorchSharp.NN.LogSoftMax
  fullName: TorchSharp.NN.LogSoftMax
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  summary: This class is used to represent a log softmax module.
  syntax:
    content: 'public class LogSoftMax : TorchSharp.NN.FunctionalModule<TorchSharp.NN.LogSoftMax>'
    content.csharp: 'public class LogSoftMax : TorchSharp.NN.FunctionalModule<TorchSharp.NN.LogSoftMax>'
  inheritance:
  - System.Object
  - TorchSharp.NN.Module
  - TorchSharp.NN.ProvidedModule
  - TorchSharp.NN.FunctionalModule`1
  implements: []
  inheritedMembers:
  - TorchSharp.NN.FunctionalModule`1.GetModules
  - TorchSharp.NN.FunctionalModule`1.GetName
  - TorchSharp.NN.FunctionalModule`1.NamedParameters
  - TorchSharp.NN.FunctionalModule`1.Parameters
  - TorchSharp.NN.FunctionalModule`1.RegisterModule(TorchSharp.NN.Module)
  - TorchSharp.NN.FunctionalModule`1.ZeroGrad
  - TorchSharp.NN.Module.Dispose
  - TorchSharp.NN.Module.Dispose(System.Boolean)
  - TorchSharp.NN.Module.Eval
  - TorchSharp.NN.Module.GetParameter(System.String)
  - TorchSharp.NN.Module.HasParameter(System.String)
  - TorchSharp.NN.Module.IsTraining
  - TorchSharp.NN.Module.Modules
  - TorchSharp.NN.Module.Train
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.LogSoftMax.Forward(TorchSharp.Tensor.TorchTensor)
  id: Forward(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.LogSoftMax
  langs:
  - csharp
  name: Forward(TorchTensor)
  nameWithType: LogSoftMax.Forward(TorchTensor)
  fullName: TorchSharp.NN.LogSoftMax.Forward(TorchTensor)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public override TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor tensor);
    parameters:
    - id: tensor
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public override TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor tensor);
  overload: TorchSharp.NN.LogSoftMax.Forward*
  exceptions: []
  modifiers.csharp:
  - public
references:
- uid: TorchSharp.NN
  commentId: N:TorchSharp.NN
  isExternal: false
  name: TorchSharp.NN
  nameWithType: TorchSharp.NN
  fullName: TorchSharp.NN
  type: namespace
- uid: TorchSharp.NN.FunctionalModule`1
  name: FunctionalModule<T>
  nameWithType: FunctionalModule<T>
  fullName: TorchSharp.NN.FunctionalModule<T>
- uid: TorchSharp.NN.LogSoftMax
  name: LogSoftMax
  nameWithType: LogSoftMax
  fullName: TorchSharp.NN.LogSoftMax
- uid: TorchSharp.NN.FunctionalModule{TorchSharp.NN.LogSoftMax}
  parent: TorchSharp.NN
  name: FunctionalModule<LogSoftMax>
  nameWithType: FunctionalModule<LogSoftMax>
  fullName: TorchSharp.NN.FunctionalModule<TorchSharp.NN.LogSoftMax>
  spec.csharp:
  - uid: TorchSharp.NN.FunctionalModule`1
    name: FunctionalModule
    nameWithType: FunctionalModule
    fullName: TorchSharp.NN.FunctionalModule
  - name: <
    nameWithType: <
    fullName: <
  - uid: TorchSharp.NN.LogSoftMax
    name: LogSoftMax
    nameWithType: LogSoftMax
    fullName: TorchSharp.NN.LogSoftMax
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.LogSoftMax.Forward(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.LogSoftMax
  isExternal: false
  name: Forward(TorchTensor)
  nameWithType: LogSoftMax.Forward(TorchTensor)
  fullName: TorchSharp.NN.LogSoftMax.Forward(TorchTensor)
  type: method
- uid: TorchSharp.Tensor.TorchTensor
  parent: TorchSharp.Tensor
  isExternal: false
  name: TorchTensor
  nameWithType: TorchTensor
  fullName: TorchSharp.Tensor.TorchTensor
- uid: TorchSharp.NN.LogSoftMax.Forward*
  commentId: Overload:TorchSharp.NN.LogSoftMax.Forward
  parent: TorchSharp.NN.LogSoftMax
  isExternal: false
  name: Forward
  nameWithType: LogSoftMax.Forward
  fullName: TorchSharp.NN.LogSoftMax.Forward
  type: method
- uid: TorchSharp.NN.Module.Dispose
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dispose()
  nameWithType: Module.Dispose()
  fullName: TorchSharp.NN.Module.Dispose()
  type: method
- uid: TorchSharp.NN.Module.Dispose(System.Boolean)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Module.Dispose(Boolean)
  fullName: TorchSharp.NN.Module.Dispose(Boolean)
  type: method
- uid: TorchSharp.NN.Module.Eval
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Eval()
  nameWithType: Module.Eval()
  fullName: TorchSharp.NN.Module.Eval()
  type: method
- uid: TorchSharp.NN.FunctionalModule`1.GetModules
  parent: TorchSharp.NN.FunctionalModule`1
  isExternal: false
  name: GetModules()
  nameWithType: FunctionalModule<T>.GetModules()
  fullName: TorchSharp.NN.FunctionalModule<T>.GetModules()
  type: method
- uid: TorchSharp.NN.FunctionalModule`1.GetName
  parent: TorchSharp.NN.FunctionalModule`1
  isExternal: false
  name: GetName()
  nameWithType: FunctionalModule<T>.GetName()
  fullName: TorchSharp.NN.FunctionalModule<T>.GetName()
  type: method
- uid: TorchSharp.NN.Module.GetParameter(System.String)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetParameter(String)
  nameWithType: Module.GetParameter(String)
  fullName: TorchSharp.NN.Module.GetParameter(String)
  type: method
- uid: TorchSharp.NN.Module.HasParameter(System.String)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: HasParameter(String)
  nameWithType: Module.HasParameter(String)
  fullName: TorchSharp.NN.Module.HasParameter(String)
  type: method
- uid: TorchSharp.NN.Module.IsTraining
  parent: TorchSharp.NN.Module
  isExternal: false
  name: IsTraining()
  nameWithType: Module.IsTraining()
  fullName: TorchSharp.NN.Module.IsTraining()
  type: method
- uid: TorchSharp.NN.Module.Modules
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Modules
  nameWithType: Module.Modules
  fullName: TorchSharp.NN.Module.Modules
  type: property
- uid: TorchSharp.NN.FunctionalModule`1.NamedParameters
  parent: TorchSharp.NN.FunctionalModule`1
  isExternal: false
  name: NamedParameters()
  nameWithType: FunctionalModule<T>.NamedParameters()
  fullName: TorchSharp.NN.FunctionalModule<T>.NamedParameters()
  type: method
- uid: TorchSharp.NN.FunctionalModule`1.Parameters
  parent: TorchSharp.NN.FunctionalModule`1
  isExternal: false
  name: Parameters()
  nameWithType: FunctionalModule<T>.Parameters()
  fullName: TorchSharp.NN.FunctionalModule<T>.Parameters()
  type: method
- uid: TorchSharp.NN.FunctionalModule`1.RegisterModule(TorchSharp.NN.Module)
  parent: TorchSharp.NN.FunctionalModule`1
  isExternal: false
  name: RegisterModule(Module)
  nameWithType: FunctionalModule<T>.RegisterModule(Module)
  fullName: TorchSharp.NN.FunctionalModule<T>.RegisterModule(Module)
  type: method
- uid: TorchSharp.NN.Module.Train
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Train()
  nameWithType: Module.Train()
  fullName: TorchSharp.NN.Module.Train()
  type: method
- uid: TorchSharp.NN.FunctionalModule`1.ZeroGrad
  parent: TorchSharp.NN.FunctionalModule`1
  isExternal: false
  name: ZeroGrad()
  nameWithType: FunctionalModule<T>.ZeroGrad()
  fullName: TorchSharp.NN.FunctionalModule<T>.ZeroGrad()
  type: method
