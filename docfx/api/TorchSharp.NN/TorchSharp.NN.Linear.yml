### YamlMime:ManagedReference
items:
- uid: TorchSharp.NN.Linear
  id: Linear
  children:
  - TorchSharp.NN.Linear.#ctor(System.IntPtr)
  - TorchSharp.NN.Linear.#ctor(System.Int64,System.Int64,System.Boolean)
  - TorchSharp.NN.Linear.Bias
  - TorchSharp.NN.Linear.Forward(TorchSharp.Tensor.TorchTensor)
  - TorchSharp.NN.Linear.Parameters
  - TorchSharp.NN.Linear.Weight
  - TorchSharp.NN.Linear.WithBias
  langs:
  - csharp
  name: Linear
  nameWithType: TorchSharp.NN.Linear
  fullName: TorchSharp.NN.Linear
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: 'public class Linear : TorchSharp.NN.ProvidedModule'
    content.csharp: 'public class Linear : TorchSharp.NN.ProvidedModule'
  inheritance:
  - System.Object
  - TorchSharp.NN.Module
  - TorchSharp.NN.ProvidedModule
  implements: []
  inheritedMembers:
  - TorchSharp.NN.Module.Dispose
  - TorchSharp.NN.Module.Dispose(System.Boolean)
  - TorchSharp.NN.Module.Eval
  - TorchSharp.NN.Module.GetModules
  - TorchSharp.NN.Module.GetName
  - TorchSharp.NN.Module.GetParameter(System.String)
  - TorchSharp.NN.Module.HasParameter(System.String)
  - TorchSharp.NN.Module.IsTraining
  - TorchSharp.NN.Module.Modules
  - TorchSharp.NN.Module.NamedParameters
  - TorchSharp.NN.Module.RegisterModule(TorchSharp.NN.Module)
  - TorchSharp.NN.Module.Train
  - TorchSharp.NN.Module.ZeroGrad
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Linear.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: TorchSharp.NN.Linear
  langs:
  - csharp
  name: Linear(IntPtr)
  nameWithType: Linear.Linear(IntPtr)
  fullName: TorchSharp.NN.Linear.Linear(IntPtr)
  type: Constructor
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public Linear (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: ''
    content.csharp: public Linear (IntPtr handle);
  overload: TorchSharp.NN.Linear.#ctor*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Linear.#ctor(System.Int64,System.Int64,System.Boolean)
  id: '#ctor(System.Int64,System.Int64,System.Boolean)'
  parent: TorchSharp.NN.Linear
  langs:
  - csharp
  name: Linear(Int64, Int64, Boolean)
  nameWithType: Linear.Linear(Int64, Int64, Boolean)
  fullName: TorchSharp.NN.Linear.Linear(Int64, Int64, Boolean)
  type: Constructor
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public Linear (long inputSize, long outputSize, bool hasBias = false);
    parameters:
    - id: inputSize
      type: System.Int64
      description: ''
    - id: outputSize
      type: System.Int64
      description: ''
    - id: hasBias
      type: System.Boolean
      description: ''
    content.csharp: public Linear (long inputSize, long outputSize, bool hasBias = false);
  overload: TorchSharp.NN.Linear.#ctor*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Linear.Bias
  id: Bias
  parent: TorchSharp.NN.Linear
  langs:
  - csharp
  name: Bias
  nameWithType: Linear.Bias
  fullName: TorchSharp.NN.Linear.Bias
  type: Property
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public Nullable<TorchSharp.Tensor.TorchTensor> Bias { get; set; }
    return:
      type: System.Nullable{TorchSharp.Tensor.TorchTensor}
      description: ''
    content.csharp: public Nullable<TorchSharp.Tensor.TorchTensor> Bias { get; set; }
  overload: TorchSharp.NN.Linear.Bias*
  exceptions: []
  modifiers.csharp:
  - public
  - get
  - set
- uid: TorchSharp.NN.Linear.Forward(TorchSharp.Tensor.TorchTensor)
  id: Forward(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.Linear
  langs:
  - csharp
  name: Forward(TorchTensor)
  nameWithType: Linear.Forward(TorchTensor)
  fullName: TorchSharp.NN.Linear.Forward(TorchTensor)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public override TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor tensor);
    parameters:
    - id: tensor
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public override TorchSharp.Tensor.TorchTensor Forward (TorchSharp.Tensor.TorchTensor tensor);
  overload: TorchSharp.NN.Linear.Forward*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Linear.Parameters
  id: Parameters
  parent: TorchSharp.NN.Linear
  langs:
  - csharp
  name: Parameters()
  nameWithType: Linear.Parameters()
  fullName: TorchSharp.NN.Linear.Parameters()
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public override System.Collections.Generic.IEnumerable<TorchSharp.Tensor.TorchTensor> Parameters ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TorchSharp.Tensor.TorchTensor}
      description: ''
    content.csharp: public override System.Collections.Generic.IEnumerable<TorchSharp.Tensor.TorchTensor> Parameters ();
  overload: TorchSharp.NN.Linear.Parameters*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.Linear.Weight
  id: Weight
  parent: TorchSharp.NN.Linear
  langs:
  - csharp
  name: Weight
  nameWithType: Linear.Weight
  fullName: TorchSharp.NN.Linear.Weight
  type: Property
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public TorchSharp.Tensor.TorchTensor Weight { get; set; }
    return:
      type: TorchSharp.Tensor.TorchTensor
      description: ''
    content.csharp: public TorchSharp.Tensor.TorchTensor Weight { get; set; }
  overload: TorchSharp.NN.Linear.Weight*
  exceptions: []
  modifiers.csharp:
  - public
  - get
  - set
- uid: TorchSharp.NN.Linear.WithBias
  id: WithBias
  parent: TorchSharp.NN.Linear
  langs:
  - csharp
  name: WithBias
  nameWithType: Linear.WithBias
  fullName: TorchSharp.NN.Linear.WithBias
  type: Property
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public bool WithBias { get; }
    return:
      type: System.Boolean
      description: ''
    content.csharp: public bool WithBias { get; }
  overload: TorchSharp.NN.Linear.WithBias*
  exceptions: []
  modifiers.csharp:
  - public
  - get
references:
- uid: TorchSharp.NN
  commentId: N:TorchSharp.NN
  isExternal: false
  name: TorchSharp.NN
  nameWithType: TorchSharp.NN
  fullName: TorchSharp.NN
  type: namespace
- uid: TorchSharp.NN.ProvidedModule
  parent: TorchSharp.NN
  isExternal: false
  name: ProvidedModule
  nameWithType: ProvidedModule
  fullName: TorchSharp.NN.ProvidedModule
- uid: TorchSharp.NN.Linear.#ctor(System.IntPtr)
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Linear(IntPtr)
  nameWithType: Linear.Linear(IntPtr)
  fullName: TorchSharp.NN.Linear.Linear(IntPtr)
  type: constructor
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: TorchSharp.NN.Linear.#ctor(System.Int64,System.Int64,System.Boolean)
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Linear(Int64, Int64, Boolean)
  nameWithType: Linear.Linear(Int64, Int64, Boolean)
  fullName: TorchSharp.NN.Linear.Linear(Int64, Int64, Boolean)
  type: constructor
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TorchSharp.NN.Linear.Bias
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Bias
  nameWithType: Linear.Bias
  fullName: TorchSharp.NN.Linear.Bias
  type: property
- uid: System.Nullable`1
  isExternal: true
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: TorchSharp.Tensor.TorchTensor
  name: TorchTensor
  nameWithType: TorchTensor
  fullName: TorchSharp.Tensor.TorchTensor
- uid: System.Nullable{TorchSharp.Tensor.TorchTensor}
  parent: System
  name: Nullable<TorchTensor>
  nameWithType: Nullable<TorchTensor>
  fullName: System.Nullable<TorchSharp.Tensor.TorchTensor>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.Linear.Forward(TorchSharp.Tensor.TorchTensor)
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Forward(TorchTensor)
  nameWithType: Linear.Forward(TorchTensor)
  fullName: TorchSharp.NN.Linear.Forward(TorchTensor)
  type: method
- uid: TorchSharp.NN.Linear.Parameters
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Parameters()
  nameWithType: Linear.Parameters()
  fullName: TorchSharp.NN.Linear.Parameters()
  type: method
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.Generic.IEnumerable
- uid: System.Collections.Generic.IEnumerable{TorchSharp.Tensor.TorchTensor}
  parent: System.Collections.Generic
  name: IEnumerable<TorchTensor>
  nameWithType: IEnumerable<TorchTensor>
  fullName: System.Collections.Generic.IEnumerable<TorchSharp.Tensor.TorchTensor>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.Linear.Weight
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Weight
  nameWithType: Linear.Weight
  fullName: TorchSharp.NN.Linear.Weight
  type: property
- uid: TorchSharp.NN.Linear.WithBias
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: WithBias
  nameWithType: Linear.WithBias
  fullName: TorchSharp.NN.Linear.WithBias
  type: property
- uid: TorchSharp.NN.Linear.#ctor*
  commentId: Overload:TorchSharp.NN.Linear.#ctor
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Linear
  nameWithType: Linear.Linear
  fullName: TorchSharp.NN.Linear.Linear
  type: constructor
- uid: TorchSharp.NN.Linear.Bias*
  commentId: Overload:TorchSharp.NN.Linear.Bias
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Bias
  nameWithType: Linear.Bias
  fullName: TorchSharp.NN.Linear.Bias
  type: property
- uid: TorchSharp.NN.Linear.Forward*
  commentId: Overload:TorchSharp.NN.Linear.Forward
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Forward
  nameWithType: Linear.Forward
  fullName: TorchSharp.NN.Linear.Forward
  type: method
- uid: TorchSharp.NN.Linear.Parameters*
  commentId: Overload:TorchSharp.NN.Linear.Parameters
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Parameters
  nameWithType: Linear.Parameters
  fullName: TorchSharp.NN.Linear.Parameters
  type: method
- uid: TorchSharp.NN.Linear.Weight*
  commentId: Overload:TorchSharp.NN.Linear.Weight
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: Weight
  nameWithType: Linear.Weight
  fullName: TorchSharp.NN.Linear.Weight
  type: property
- uid: TorchSharp.NN.Linear.WithBias*
  commentId: Overload:TorchSharp.NN.Linear.WithBias
  parent: TorchSharp.NN.Linear
  isExternal: false
  name: WithBias
  nameWithType: Linear.WithBias
  fullName: TorchSharp.NN.Linear.WithBias
  type: property
- uid: TorchSharp.NN.Module.Dispose
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dispose()
  nameWithType: Module.Dispose()
  fullName: TorchSharp.NN.Module.Dispose()
  type: method
- uid: TorchSharp.NN.Module.Dispose(System.Boolean)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Module.Dispose(Boolean)
  fullName: TorchSharp.NN.Module.Dispose(Boolean)
  type: method
- uid: TorchSharp.NN.Module.Eval
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Eval()
  nameWithType: Module.Eval()
  fullName: TorchSharp.NN.Module.Eval()
  type: method
- uid: TorchSharp.NN.Module.GetModules
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetModules()
  nameWithType: Module.GetModules()
  fullName: TorchSharp.NN.Module.GetModules()
  type: method
- uid: TorchSharp.NN.Module.GetName
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetName()
  nameWithType: Module.GetName()
  fullName: TorchSharp.NN.Module.GetName()
  type: method
- uid: TorchSharp.NN.Module.GetParameter(System.String)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: GetParameter(String)
  nameWithType: Module.GetParameter(String)
  fullName: TorchSharp.NN.Module.GetParameter(String)
  type: method
- uid: TorchSharp.NN.Module.HasParameter(System.String)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: HasParameter(String)
  nameWithType: Module.HasParameter(String)
  fullName: TorchSharp.NN.Module.HasParameter(String)
  type: method
- uid: TorchSharp.NN.Module.IsTraining
  parent: TorchSharp.NN.Module
  isExternal: false
  name: IsTraining()
  nameWithType: Module.IsTraining()
  fullName: TorchSharp.NN.Module.IsTraining()
  type: method
- uid: TorchSharp.NN.Module.Modules
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Modules
  nameWithType: Module.Modules
  fullName: TorchSharp.NN.Module.Modules
  type: property
- uid: TorchSharp.NN.Module.NamedParameters
  parent: TorchSharp.NN.Module
  isExternal: false
  name: NamedParameters()
  nameWithType: Module.NamedParameters()
  fullName: TorchSharp.NN.Module.NamedParameters()
  type: method
- uid: TorchSharp.NN.Module.RegisterModule(TorchSharp.NN.Module)
  parent: TorchSharp.NN.Module
  isExternal: false
  name: RegisterModule(Module)
  nameWithType: Module.RegisterModule(Module)
  fullName: TorchSharp.NN.Module.RegisterModule(Module)
  type: method
- uid: TorchSharp.NN.Module.Train
  parent: TorchSharp.NN.Module
  isExternal: false
  name: Train()
  nameWithType: Module.Train()
  fullName: TorchSharp.NN.Module.Train()
  type: method
- uid: TorchSharp.NN.Module.ZeroGrad
  parent: TorchSharp.NN.Module
  isExternal: false
  name: ZeroGrad()
  nameWithType: Module.ZeroGrad()
  fullName: TorchSharp.NN.Module.ZeroGrad()
  type: method
