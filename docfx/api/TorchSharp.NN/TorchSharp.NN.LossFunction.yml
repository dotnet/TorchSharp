### YamlMime:ManagedReference
items:
- uid: TorchSharp.NN.LossFunction
  id: LossFunction
  children:
  - TorchSharp.NN.LossFunction.#ctor
  - TorchSharp.NN.LossFunction.BCE(System.Nullable{TorchSharp.Tensor.TorchTensor},TorchSharp.NN.Reduction)
  - TorchSharp.NN.LossFunction.MSE(TorchSharp.NN.Reduction)
  - TorchSharp.NN.LossFunction.NLL(System.Nullable{TorchSharp.Tensor.TorchTensor},TorchSharp.NN.Reduction)
  - TorchSharp.NN.LossFunction.PoissonNLL(System.Boolean,System.Boolean,System.Single,TorchSharp.NN.Reduction)
  langs:
  - csharp
  name: LossFunction
  nameWithType: TorchSharp.NN.LossFunction
  fullName: TorchSharp.NN.LossFunction
  type: Class
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  summary: Class maintaing the supported loss functions.
  syntax:
    content: public class LossFunction
    content.csharp: public class LossFunction
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.LossFunction.#ctor
  id: '#ctor'
  parent: TorchSharp.NN.LossFunction
  langs:
  - csharp
  name: LossFunction()
  nameWithType: LossFunction.LossFunction()
  fullName: TorchSharp.NN.LossFunction.LossFunction()
  type: Constructor
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public LossFunction ();
    parameters: []
    content.csharp: public LossFunction ();
  overload: TorchSharp.NN.LossFunction.#ctor*
  exceptions: []
  modifiers.csharp:
  - public
- uid: TorchSharp.NN.LossFunction.BCE(System.Nullable{TorchSharp.Tensor.TorchTensor},TorchSharp.NN.Reduction)
  id: BCE(System.Nullable{TorchSharp.Tensor.TorchTensor},TorchSharp.NN.Reduction)
  parent: TorchSharp.NN.LossFunction
  langs:
  - csharp
  name: BCE(Nullable<TorchTensor>, Reduction)
  nameWithType: LossFunction.BCE(Nullable<TorchTensor>, Reduction)
  fullName: TorchSharp.NN.LossFunction.BCE(Nullable<TorchTensor>, Reduction)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.LossFunction.Loss BCE (Nullable<TorchSharp.Tensor.TorchTensor> weigths = null, TorchSharp.NN.Reduction reduction = TorchSharp.NN.Reduction.Mean);
    parameters:
    - id: weigths
      type: System.Nullable{TorchSharp.Tensor.TorchTensor}
      description: ''
    - id: reduction
      type: TorchSharp.NN.Reduction
      description: ''
    return:
      type: TorchSharp.NN.LossFunction.Loss
      description: ''
    content.csharp: public static TorchSharp.NN.LossFunction.Loss BCE (Nullable<TorchSharp.Tensor.TorchTensor> weigths = null, TorchSharp.NN.Reduction reduction = TorchSharp.NN.Reduction.Mean);
  overload: TorchSharp.NN.LossFunction.BCE*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.LossFunction.MSE(TorchSharp.NN.Reduction)
  id: MSE(TorchSharp.NN.Reduction)
  parent: TorchSharp.NN.LossFunction
  langs:
  - csharp
  name: MSE(Reduction)
  nameWithType: LossFunction.MSE(Reduction)
  fullName: TorchSharp.NN.LossFunction.MSE(Reduction)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.LossFunction.Loss MSE (TorchSharp.NN.Reduction reduction = TorchSharp.NN.Reduction.Mean);
    parameters:
    - id: reduction
      type: TorchSharp.NN.Reduction
      description: ''
    return:
      type: TorchSharp.NN.LossFunction.Loss
      description: ''
    content.csharp: public static TorchSharp.NN.LossFunction.Loss MSE (TorchSharp.NN.Reduction reduction = TorchSharp.NN.Reduction.Mean);
  overload: TorchSharp.NN.LossFunction.MSE*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.LossFunction.NLL(System.Nullable{TorchSharp.Tensor.TorchTensor},TorchSharp.NN.Reduction)
  id: NLL(System.Nullable{TorchSharp.Tensor.TorchTensor},TorchSharp.NN.Reduction)
  parent: TorchSharp.NN.LossFunction
  langs:
  - csharp
  name: NLL(Nullable<TorchTensor>, Reduction)
  nameWithType: LossFunction.NLL(Nullable<TorchTensor>, Reduction)
  fullName: TorchSharp.NN.LossFunction.NLL(Nullable<TorchTensor>, Reduction)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.LossFunction.Loss NLL (Nullable<TorchSharp.Tensor.TorchTensor> weigths = null, TorchSharp.NN.Reduction reduction = TorchSharp.NN.Reduction.Mean);
    parameters:
    - id: weigths
      type: System.Nullable{TorchSharp.Tensor.TorchTensor}
      description: ''
    - id: reduction
      type: TorchSharp.NN.Reduction
      description: ''
    return:
      type: TorchSharp.NN.LossFunction.Loss
      description: ''
    content.csharp: public static TorchSharp.NN.LossFunction.Loss NLL (Nullable<TorchSharp.Tensor.TorchTensor> weigths = null, TorchSharp.NN.Reduction reduction = TorchSharp.NN.Reduction.Mean);
  overload: TorchSharp.NN.LossFunction.NLL*
  exceptions: []
  modifiers.csharp:
  - public
  - static
- uid: TorchSharp.NN.LossFunction.PoissonNLL(System.Boolean,System.Boolean,System.Single,TorchSharp.NN.Reduction)
  id: PoissonNLL(System.Boolean,System.Boolean,System.Single,TorchSharp.NN.Reduction)
  parent: TorchSharp.NN.LossFunction
  langs:
  - csharp
  name: PoissonNLL(Boolean, Boolean, Single, Reduction)
  nameWithType: LossFunction.PoissonNLL(Boolean, Boolean, Single, Reduction)
  fullName: TorchSharp.NN.LossFunction.PoissonNLL(Boolean, Boolean, Single, Reduction)
  type: Method
  assemblies:
  - TorchSharp
  namespace: TorchSharp.NN
  syntax:
    content: public static TorchSharp.NN.LossFunction.Loss PoissonNLL (bool logInput = true, bool full = false, float eps = 1E-08, TorchSharp.NN.Reduction reduction = TorchSharp.NN.Reduction.Mean);
    parameters:
    - id: logInput
      type: System.Boolean
      description: ''
    - id: full
      type: System.Boolean
      description: ''
    - id: eps
      type: System.Single
      description: ''
    - id: reduction
      type: TorchSharp.NN.Reduction
      description: ''
    return:
      type: TorchSharp.NN.LossFunction.Loss
      description: ''
    content.csharp: public static TorchSharp.NN.LossFunction.Loss PoissonNLL (bool logInput = true, bool full = false, float eps = 1E-08, TorchSharp.NN.Reduction reduction = TorchSharp.NN.Reduction.Mean);
  overload: TorchSharp.NN.LossFunction.PoissonNLL*
  exceptions: []
  modifiers.csharp:
  - public
  - static
references:
- uid: TorchSharp.NN
  commentId: N:TorchSharp.NN
  isExternal: false
  name: TorchSharp.NN
  nameWithType: TorchSharp.NN
  fullName: TorchSharp.NN
  type: namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TorchSharp.NN.LossFunction.#ctor
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: LossFunction()
  nameWithType: LossFunction.LossFunction()
  fullName: TorchSharp.NN.LossFunction.LossFunction()
  type: constructor
- uid: TorchSharp.NN.LossFunction.BCE(System.Nullable{TorchSharp.Tensor.TorchTensor},TorchSharp.NN.Reduction)
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: BCE(Nullable<TorchTensor>, Reduction)
  nameWithType: LossFunction.BCE(Nullable<TorchTensor>, Reduction)
  fullName: TorchSharp.NN.LossFunction.BCE(Nullable<TorchTensor>, Reduction)
  type: method
- uid: TorchSharp.NN.LossFunction.Loss
  parent: TorchSharp.NN
  isExternal: false
  name: LossFunction.Loss
  nameWithType: LossFunction.Loss
  fullName: TorchSharp.NN.LossFunction.Loss
- uid: System.Nullable`1
  isExternal: true
  name: Nullable
  nameWithType: Nullable
  fullName: System.Nullable
- uid: TorchSharp.Tensor.TorchTensor
  name: TorchTensor
  nameWithType: TorchTensor
  fullName: TorchSharp.Tensor.TorchTensor
- uid: System.Nullable{TorchSharp.Tensor.TorchTensor}
  parent: System
  name: Nullable<TorchTensor>
  nameWithType: Nullable<TorchTensor>
  fullName: System.Nullable<TorchSharp.Tensor.TorchTensor>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TorchSharp.Tensor.TorchTensor
    name: TorchTensor
    nameWithType: TorchTensor
    fullName: TorchSharp.Tensor.TorchTensor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TorchSharp.NN.Reduction
  parent: TorchSharp.NN
  isExternal: false
  name: Reduction
  nameWithType: Reduction
  fullName: TorchSharp.NN.Reduction
- uid: TorchSharp.NN.LossFunction.MSE(TorchSharp.NN.Reduction)
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: MSE(Reduction)
  nameWithType: LossFunction.MSE(Reduction)
  fullName: TorchSharp.NN.LossFunction.MSE(Reduction)
  type: method
- uid: TorchSharp.NN.LossFunction.NLL(System.Nullable{TorchSharp.Tensor.TorchTensor},TorchSharp.NN.Reduction)
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: NLL(Nullable<TorchTensor>, Reduction)
  nameWithType: LossFunction.NLL(Nullable<TorchTensor>, Reduction)
  fullName: TorchSharp.NN.LossFunction.NLL(Nullable<TorchTensor>, Reduction)
  type: method
- uid: TorchSharp.NN.LossFunction.PoissonNLL(System.Boolean,System.Boolean,System.Single,TorchSharp.NN.Reduction)
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: PoissonNLL(Boolean, Boolean, Single, Reduction)
  nameWithType: LossFunction.PoissonNLL(Boolean, Boolean, Single, Reduction)
  fullName: TorchSharp.NN.LossFunction.PoissonNLL(Boolean, Boolean, Single, Reduction)
  type: method
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TorchSharp.NN.LossFunction.#ctor*
  commentId: Overload:TorchSharp.NN.LossFunction.#ctor
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: LossFunction
  nameWithType: LossFunction.LossFunction
  fullName: TorchSharp.NN.LossFunction.LossFunction
  type: constructor
- uid: TorchSharp.NN.LossFunction.BCE*
  commentId: Overload:TorchSharp.NN.LossFunction.BCE
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: BCE
  nameWithType: LossFunction.BCE
  fullName: TorchSharp.NN.LossFunction.BCE
  type: method
- uid: TorchSharp.NN.LossFunction.MSE*
  commentId: Overload:TorchSharp.NN.LossFunction.MSE
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: MSE
  nameWithType: LossFunction.MSE
  fullName: TorchSharp.NN.LossFunction.MSE
  type: method
- uid: TorchSharp.NN.LossFunction.NLL*
  commentId: Overload:TorchSharp.NN.LossFunction.NLL
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: NLL
  nameWithType: LossFunction.NLL
  fullName: TorchSharp.NN.LossFunction.NLL
  type: method
- uid: TorchSharp.NN.LossFunction.PoissonNLL*
  commentId: Overload:TorchSharp.NN.LossFunction.PoissonNLL
  parent: TorchSharp.NN.LossFunction
  isExternal: false
  name: PoissonNLL
  nameWithType: LossFunction.PoissonNLL
  fullName: TorchSharp.NN.LossFunction.PoissonNLL
  type: method
